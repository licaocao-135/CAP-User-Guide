{"compress":true,"commitItems":[["fe921c22-a132-4233-9bd1-eef892c5bca4",1620630989105,"---\nenable html: true\n---\n# Lorem ipsum\n\nLorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed.\n",[[1620630982335,["lixia@LAPTOP-FEL3RH8E",[[-1,28,"Lorem ipsum"]],[28,28],[28,28]]],[1620630984824,["lixia@LAPTOP-FEL3RH8E",[[1,28,"应用管理概述"]],[28,28],[34,34]]],[1620630987884,["lixia@LAPTOP-FEL3RH8E",[[-1,36,"Lorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed."]],[36,942],[36,36]]],[1620631010996,["lixia@LAPTOP-FEL3RH8E",[[1,36,"Cloud Native的应用管理覆盖编码、部署和运营三个阶段。应用管理对于以上三个阶段的支撑如下图所示。\n\n"]],[36,36],[91,91]]],[1620631015545,["lixia@LAPTOP-FEL3RH8E",[[1,92,"\n"]],[91,91],[92,92]]],[1620631050410,["lixia@LAPTOP-FEL3RH8E",[[-1,92,"\n"],[1,93,"#"]],[92,92],[93,93]]],[1620631050976,["lixia@LAPTOP-FEL3RH8E",[[1,93,"###"]],[93,93],[96,96]]],[1620631051763,["lixia@LAPTOP-FEL3RH8E",[[-1,95,"#"]],[96,96],[95,95]]],[1620631063157,["lixia@LAPTOP-FEL3RH8E",[[1,95," 应用管理中的服务部署与流水线中的"]],[95,95],[112,112]]],[1620631063884,["lixia@LAPTOP-FEL3RH8E",[[-1,110,"中的"]],[112,112],[110,110]]],[1620631067482,["lixia@LAPTOP-FEL3RH8E",[[1,110,"服务中的部署"]],[110,110],[116,116]]],[1620631077799,["lixia@LAPTOP-FEL3RH8E",[[-1,110,"服务"]],[112,112],[110,110]]],[1620631083891,["lixia@LAPTOP-FEL3RH8E",[[-1,101,"的"]],[102,102],[101,101]]],[1620631085302,["lixia@LAPTOP-FEL3RH8E",[[-1,110,"的"]],[111,111],[110,110]]],[1620631087747,["lixia@LAPTOP-FEL3RH8E",[[1,112,"的关系"]],[112,112],[115,115]]],[1620631088317,["lixia@LAPTOP-FEL3RH8E",[[1,115,"\n\n"]],[115,115],[116,116]]],[1620631088495,["lixia@LAPTOP-FEL3RH8E",[[1,117,"\n"]],[116,116],[117,117]]],[1620631089065,["lixia@LAPTOP-FEL3RH8E",[[1,118,"\n"]],[117,117],[118,118]]],[1620631089264,["lixia@LAPTOP-FEL3RH8E",[[1,119,"\n"]],[118,118],[119,119]]],[1620631090187,["lixia@LAPTOP-FEL3RH8E",[[1,119,"### "]],[119,119],[123,123]]]],null,"lixia@LAPTOP-FEL3RH8E"],["3091317d-9180-4ac9-ab46-2fc921beae8e",1620805799601,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖编码、部署和运营三个阶段。应用管理对于以上三个阶段的支撑如下图所示。\n\n\n### 应用管理中服务部署与流水线中部署的关系\n\n\n\n### \n",[[1620805797335,["lixia@LAPTOP-FEL3RH8E",[[1,123,"服务引擎类型"]],[123,123],[129,129]]],[1620805797733,["lixia@LAPTOP-FEL3RH8E",[[1,130,"\n"]],[129,129],[130,130]]],[1620805898509,["lixia@LAPTOP-FEL3RH8E",[[-1,130,"\n"],[1,131,"C"]],[130,130],[131,131]]],[1620805918556,["lixia@LAPTOP-FEL3RH8E",[[1,131,"loud Native当前支持Spring Cloud、Nacos、Istio三种服务引擎"]],[131,131],[176,176]]],[1620805921031,["lixia@LAPTOP-FEL3RH8E",[[1,176,"类型："]],[176,176],[179,179]]],[1620805921362,["lixia@LAPTOP-FEL3RH8E",[[1,179,"\n\n"]],[179,179],[180,180]]],[1620806509385,["lixia@LAPTOP-FEL3RH8E",[[1,181,"\n"]],[179,179],[180,180]]],[1620806513873,["lixia@LAPTOP-FEL3RH8E",[[1,180,"* ****"]],[180,180],[184,184]]],[1620806516882,["lixia@LAPTOP-FEL3RH8E",[[1,184,"Istio"]],[184,184],[189,189]]],[1620806519610,["lixia@LAPTOP-FEL3RH8E",[[1,192,"* \n"]],[191,191],[194,194]]],[1620806521186,["lixia@LAPTOP-FEL3RH8E",[[-1,192,"* "]],[194,194],[192,192]]],[1620806522393,["lixia@LAPTOP-FEL3RH8E",[[1,192," "]],[192,192],[193,193]]],[1620806522573,["lixia@LAPTOP-FEL3RH8E",[[1,193," "]],[193,193],[194,194]]],[1620806524700,["lixia@LAPTOP-FEL3RH8E",[[1,191,"      "]],[191,191],[197,197]]],[1620806528066,["lixia@LAPTOP-FEL3RH8E",[[1,200,"Istio使"]],[200,200],[206,206]]],[1620806529146,["lixia@LAPTOP-FEL3RH8E",[[-1,205,"使"]],[206,206],[205,205]]],[1620806568487,["lixia@LAPTOP-FEL3RH8E",[[1,205,"是基于Serice Mesh的一种服务管理平台。"]],[205,205],[229,229]]],[1620806584406,["lixia@LAPTOP-FEL3RH8E",[[1,229,"服务之间的通信（比如这里的 Service A 访问 Service B）会通过代理（默认是 Envoy）来进行。"]],[229,229],[286,286]]],[1620806588635,["lixia@LAPTOP-FEL3RH8E",[[-1,236,"（比如这里的 Service A 访问 Service B）会"]],[236,267],[236,236]]],[1620806591010,["lixia@LAPTOP-FEL3RH8E",[[-1,240,"（默认是 Envoy）"]],[240,251],[240,240]]],[1620806593404,["lixia@LAPTOP-FEL3RH8E",[[1,240,"、"]],[240,240],[241,241]]],[1620806595160,["lixia@LAPTOP-FEL3RH8E",[[-1,240,"、"]],[241,241],[240,240]]],[1620806715907,["lixia@LAPTOP-FEL3RH8E",[[1,244,"Istio提供"]],[244,244],[251,251]]],[1620806762556,["lixia@LAPTOP-FEL3RH8E",[[1,251,"服务的服务发现、负载均衡、流量控制，安全加固、"]],[251,251],[274,274]]],[1620806763649,["lixia@LAPTOP-FEL3RH8E",[[-1,273,"、"]],[274,274],[273,273]]],[1620806764025,["lixia@LAPTOP-FEL3RH8E",[[1,273,"，"]],[273,273],[274,274]]],[1620806798414,["lixia@LAPTOP-FEL3RH8E",[[1,254,"连接、安全加固、控制和观察服务"]],[254,254],[269,269]]],[1620806804024,["lixia@LAPTOP-FEL3RH8E",[[-1,249,"提供"]],[251,251],[249,249]]],[1620806806980,["lixia@LAPTOP-FEL3RH8E",[[1,249,"提供"]],[249,249],[251,251]]],[1620806815822,["lixia@LAPTOP-FEL3RH8E",[[-1,267,"服务服务发现、负载均衡、流量控制，安全加固，"],[1,289,"功能"]],[267,267],[269,269]]],[1620806816052,["lixia@LAPTOP-FEL3RH8E",[[1,269,"。"]],[269,269],[270,270]]],[1620806818962,["lixia@LAPTOP-FEL3RH8E",[[-1,269,"。"]],[270,270],[269,269]]],[1620806819540,["lixia@LAPTOP-FEL3RH8E",[[1,267,"服务服务发现、负载均衡、流量控制，安全加固，"],[-1,267,"功能"]],[269,269],[267,267]]],[1620806828711,["lixia@LAPTOP-FEL3RH8E",[[1,256,"（例如服务发现、负载均衡、流量控制等）"]],[256,256],[275,275]]],[1620806835111,["lixia@LAPTOP-FEL3RH8E",[[1,283,"（例如访问规则"]],[283,283],[290,290]]],[1620806837501,["lixia@LAPTOP-FEL3RH8E",[[1,290,"控制）"]],[290,290],[293,293]]],[1620806842437,["lixia@LAPTOP-FEL3RH8E",[[-1,296,"服务服务发现、负载均衡、流量控制，安全加固，"],[1,318,"（"]],[296,296],[297,297]]],[1620806862307,["lixia@LAPTOP-FEL3RH8E",[[1,297,"例如流量、"]],[297,297],[302,302]]],[1620806896725,["lixia@LAPTOP-FEL3RH8E",[[-1,301,"、"]],[302,302],[301,301]]],[1620806915370,["lixia@LAPTOP-FEL3RH8E",[[1,301,"）等服务。"]],[301,301],[306,306]]],[1620806963831,["lixia@LAPTOP-FEL3RH8E",[[1,228,"，适用于微服务架构"]],[228,228],[237,237]]],[1620806972664,["lixia@LAPTOP-FEL3RH8E",[[1,316,"  \n"]],[315,315],[318,318]]],[1620806976475,["lixia@LAPTOP-FEL3RH8E",[[1,315,"        "]],[315,315],[323,323]]],[1620807096782,["lixia@LAPTOP-FEL3RH8E",[[1,315,"从而为微服务架构下的故障"]],[315,315],[327,327]]],[1620807102731,["lixia@LAPTOP-FEL3RH8E",[[1,329,"、应用容错性、\n  "]],[329,329],[339,339]]],[1620807109608,["lixia@LAPTOP-FEL3RH8E",[[-1,345,"  "]],[339,339],[337,337]]],[1620807109966,["lixia@LAPTOP-FEL3RH8E",[[-1,336,"\n"]],[337,337],[336,336]]],[1620807128422,["lixia@LAPTOP-FEL3RH8E",[[1,336,"应用升级发布、系统安全等难题提供了可能的解决方案。\n  "]],[336,336],[364,364]]],[1620807132549,["lixia@LAPTOP-FEL3RH8E",[[-1,362,"          "],[1,372,"\n"]],[364,364],[363,363]]],[1620807135359,["lixia@LAPTOP-FEL3RH8E",[[1,363,"* ****"]],[363,363],[367,367]]],[1620807141319,["lixia@LAPTOP-FEL3RH8E",[[1,367,"Spring Cloud"]],[367,367],[379,379]]],[1620807982205,[null,[[-1,327,"  "],[1,329,"排查"],[1,381,"\n "]],[327,327],[383,383]]],[1620807982205,[null,[[1,327,"  "],[-1,327,"排查"],[-1,381,"\n "]],[383,383],[327,327]]],[1620807963892,["lixia@LAPTOP-FEL3RH8E",[[1,382,"* \n"]],[381,381],[384,384]]],[1620807964556,["lixia@LAPTOP-FEL3RH8E",[[-1,382,"* "]],[384,384],[382,382]]],[1620807965863,["lixia@LAPTOP-FEL3RH8E",[[1,382,"  "]],[382,382],[384,384]]],[1620807967584,["lixia@LAPTOP-FEL3RH8E",[[1,381,"     "]],[381,381],[386,386]]]],null,"lixia@LAPTOP-FEL3RH8E"],["3397d9af-bc76-4b0e-a5ea-90eb0d6aca21",1620891801669,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖编码、部署和运营三个阶段。应用管理对于以上三个阶段的支撑如下图所示。\n\n\n### 应用管理中服务部署与流水线中部署的关系\n\n\n\n### 服务引擎类型\nCloud Native当前支持Spring Cloud、Nacos、Istio三种服务引擎类型：\n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。\n\n* **Spring Cloud**     \n  \n  \n\n",[[1620891742664,["lixia@LAPTOP-FEL3RH8E",[[1,386,"      "]],[382,382],[388,388]]],[1620891743007,["lixia@LAPTOP-FEL3RH8E",[[1,388,"\n"]],[388,388],[389,389]]],[1620891744128,["lixia@LAPTOP-FEL3RH8E",[[1,393,"  "]],[389,389],[391,391]]],[1620891744715,["lixia@LAPTOP-FEL3RH8E",[[1,391,"S"]],[391,391],[392,392]]],[1620891745398,["lixia@LAPTOP-FEL3RH8E",[[-1,391,"S"]],[392,392],[391,391]]],[1620891751396,["lixia@LAPTOP-FEL3RH8E",[[1,391,"Spring"]],[391,391],[397,397]]],[1620891751485,["lixia@LAPTOP-FEL3RH8E",[[1,401," "]],[397,397],[398,398]]],[1620891759289,["lixia@LAPTOP-FEL3RH8E",[[1,398,"Cloud是一个基于Spring"]],[398,398],[414,414]]],[1620891759440,["lixia@LAPTOP-FEL3RH8E",[[1,418," "]],[414,414],[415,415]]],[1620891766821,["lixia@LAPTOP-FEL3RH8E",[[1,415,"Boot的微服务开发合额"]],[415,415],[427,427]]],[1620891767433,["lixia@LAPTOP-FEL3RH8E",[[-1,425,"合额"]],[427,427],[425,425]]],[1620891771274,["lixia@LAPTOP-FEL3RH8E",[[1,425,"和治理平台。"]],[425,425],[431,431]]],[1620891826708,["lixia@LAPTOP-FEL3RH8E",[[-1,428,"平台。"],[1,431,"框架"]],[428,428],[430,430]]],[1620891840023,["lixia@LAPTOP-FEL3RH8E",[[1,430,"，实现快速构建分布式系统中的某些常见模式（例如：配置管理、服务发现、智能路由、微代理、控制总线、一次性令牌、全局锁、分布式会话、群集状态等）"]],[430,430],[500,500]]],[1620891845582,["lixia@LAPTOP-FEL3RH8E",[[-1,444,"某些"]],[444,446],[444,444]]],[1620891848614,["lixia@LAPTOP-FEL3RH8E",[[1,448,"，包括"]],[448,448],[451,451]]],[1620891850544,["lixia@LAPTOP-FEL3RH8E",[[-1,451,"（例如"]],[451,451],[451,451]]],[1620891853903,["lixia@LAPTOP-FEL3RH8E",[[-1,497,"） "]],[499,499],[497,497]]],[1620891854686,["lixia@LAPTOP-FEL3RH8E",[[1,497,"。"]],[497,497],[498,498]]],[1620891889829,["lixia@LAPTOP-FEL3RH8E",[[1,459,"注册与"]],[459,459],[462,462]]],[1620891913651,["lixia@LAPTOP-FEL3RH8E",[[-1,470,"微代理、控制总线、一次性令牌、"],[1,485,"负载"]],[470,470],[472,472]]],[1620891915612,["lixia@LAPTOP-FEL3RH8E",[[1,472,"均衡、"]],[472,472],[475,475]]],[1620891919910,["lixia@LAPTOP-FEL3RH8E",[[-1,485,"群集"]],[487,487],[485,485]]],[1620891921055,["lixia@LAPTOP-FEL3RH8E",[[1,485,"集群"]],[485,485],[487,487]]],[1620891943286,["lixia@LAPTOP-FEL3RH8E",[[-1,475,"全局锁、分布式会话、集群状态"],[1,489,"消息"]],[475,475],[477,477]]],[1620891953053,["lixia@LAPTOP-FEL3RH8E",[[1,477,"总线、断路器、数据监控"]],[477,477],[488,488]]],[1620891968896,["lixia@LAPTOP-FEL3RH8E",[[1,500,"  \n"]],[493,493],[496,496]]],[1620891970129,["lixia@LAPTOP-FEL3RH8E",[[-1,494,"  "],[1,496,"\n"]],[496,496],[495,495]]],[1620891975199,["lixia@LAPTOP-FEL3RH8E",[[1,495,"* Nacos"]],[495,495],[502,502]]],[1620891980492,["lixia@LAPTOP-FEL3RH8E",[[1,497,"**"],[1,502,"**"]],[497,502],[497,506]]],[1620891982723,["lixia@LAPTOP-FEL3RH8E",[[1,506,"     "]],[506,506],[511,511]]],[1620891983298,["lixia@LAPTOP-FEL3RH8E",[[1,512,"* \n"]],[511,511],[514,514]]],[1620891983636,["lixia@LAPTOP-FEL3RH8E",[[1,514," "]],[514,514],[515,515]]],[1620891984982,["lixia@LAPTOP-FEL3RH8E",[[-1,512,"*  "]],[515,515],[512,512]]],[1620891985657,["lixia@LAPTOP-FEL3RH8E",[[1,512,"  "]],[512,512],[514,514]]],[1620892311915,["lixia@LAPTOP-FEL3RH8E",[[1,514,"Nacos是构建以“服务”为中心的现代应用架构(例如微服务范式、云原生范式)的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助开发者快速实现动态服务发现、服务配\n\n置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。Nacos支\n\n持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.\n\nSpringCloud RESTful Service)的服务的发现、配置和管理。其关键特性有:"]],[514,514],[755,755]]],[1620892329891,["lixia@LAPTOP-FEL3RH8E",[[-1,599,"\n"]],[598,598],[598,598]]],[1620892330376,["lixia@LAPTOP-FEL3RH8E",[[-1,598,"\n"]],[598,598],[598,598]]],[1620892332910,["lixia@LAPTOP-FEL3RH8E",[[-1,643,"\n"]],[642,642],[642,642]]],[1620892333277,["lixia@LAPTOP-FEL3RH8E",[[-1,642,"\n"]],[642,642],[642,642]]],[1620892337171,["lixia@LAPTOP-FEL3RH8E",[[-1,702,"\n"]],[701,701],[701,701]]],[1620892337778,["lixia@LAPTOP-FEL3RH8E",[[-1,701,"\n"]],[701,701],[701,701]]],[1620892367551,["lixia@LAPTOP-FEL3RH8E",[[-1,543,"范式"]],[545,545],[543,543]]],[1620892368641,["lixia@LAPTOP-FEL3RH8E",[[-1,547,"范式"]],[549,549],[547,547]]],[1620892371153,["lixia@LAPTOP-FEL3RH8E",[[-1,537,"("]],[538,538],[537,537]]],[1620892372097,["lixia@LAPTOP-FEL3RH8E",[[1,537,"（"]],[537,537],[538,538]]],[1620892374183,["lixia@LAPTOP-FEL3RH8E",[[-1,547,")"],[1,548,"）"]],[547,547],[548,548]]],[1620892388927,["lixia@LAPTOP-FEL3RH8E",[[-1,531,"现代应用架构（例如微服务、云原生）的"]],[531,548],[530,530]]],[1620892405445,["lixia@LAPTOP-FEL3RH8E",[[-1,559,"开发者"],[1,562,"用户"]],[559,559],[561,561]]],[1620892418688,["lixia@LAPTOP-FEL3RH8E",[[1,613,"\n  "]],[613,613],[616,616]]],[1620892421260,["lixia@LAPTOP-FEL3RH8E",[[1,613,"       "]],[613,613],[620,620]]],[1620892438259,["lixia@LAPTOP-FEL3RH8E",[[-1,719,"的"]],[720,720],[719,719]]],[1620892441704,["lixia@LAPTOP-FEL3RH8E",[[-1,728,"其关键特性有:"]],[728,735],[728,728]]],[1620892445189,["lixia@LAPTOP-FEL3RH8E",[[1,620,"  "]],[616,616],[618,618]]],[1620892460980,["lixia@LAPTOP-FEL3RH8E",[[-1,734,"  "],[1,736,"#"]],[734,736],[735,735]]],[1620892461823,["lixia@LAPTOP-FEL3RH8E",[[1,735,"## "]],[735,735],[738,738]]],[1620892523535,["lixia@LAPTOP-FEL3RH8E",[[1,738,"功能特点"]],[738,738],[742,742]]],[1620892523766,["lixia@LAPTOP-FEL3RH8E",[[1,744,"\n"]],[742,742],[743,743]]],[1620892526496,["lixia@LAPTOP-FEL3RH8E",[[1,743,"XXXXX"]],[743,743],[748,748]]],[1620892553157,["lixia@LAPTOP-FEL3RH8E",[[-1,125,"引擎类型"]],[129,129],[125,125]]],[1620892554608,["lixia@LAPTOP-FEL3RH8E",[[1,125,"ZHILI"]],[125,125],[130,130]]],[1620892555572,["lixia@LAPTOP-FEL3RH8E",[[-1,125,"ZHILI"]],[130,130],[125,125]]],[1620892556812,["lixia@LAPTOP-FEL3RH8E",[[1,125,"治理"]],[125,125],[127,127]]],[1620892561952,["lixia@LAPTOP-FEL3RH8E",[[1,128,"\n"]],[127,127],[128,128]]],[1620892563549,["lixia@LAPTOP-FEL3RH8E",[[1,129,"\n"]],[128,128],[129,129]]],[1620892646652,["lixia@LAPTOP-FEL3RH8E",[[1,129,"要实现服务治理，首先需要发现服务。Cloud Native通过配置服务引擎"]],[129,129],[166,166]]],[1620892694394,["lixia@LAPTOP-FEL3RH8E",[[1,166,"（博阿凯"]],[166,166],[170,170]]],[1620892695871,["lixia@LAPTOP-FEL3RH8E",[[-1,167,"博阿凯"]],[170,170],[167,167]]],[1620892700608,["lixia@LAPTOP-FEL3RH8E",[[1,167,"包括引擎类型、"]],[167,167],[174,174]]],[1620892719580,["lixia@LAPTOP-FEL3RH8E",[[1,174,"服务发现和配置方式"]],[174,174],[183,183]]],[1620892720331,["lixia@LAPTOP-FEL3RH8E",[[-1,181,"方式"]],[183,183],[181,181]]],[1620892722375,["lixia@LAPTOP-FEL3RH8E",[[1,181,"底是"]],[181,181],[183,183]]],[1620892728245,["lixia@LAPTOP-FEL3RH8E",[[-1,166,"（包括引擎类型、服务发现和配置底是"]],[183,183],[166,166]]],[1620892761230,["lixia@LAPTOP-FEL3RH8E",[[1,166,"使局域网内部的"]],[166,166],[173,173]]],[1620892762639,["lixia@LAPTOP-FEL3RH8E",[[-1,172,"的"]],[173,173],[172,172]]],[1620892772727,["lixia@LAPTOP-FEL3RH8E",[[1,167,"服务再"]],[167,167],[170,170]]],[1620892773283,["lixia@LAPTOP-FEL3RH8E",[[-1,169,"再"]],[170,170],[169,169]]],[1620892775433,["lixia@LAPTOP-FEL3RH8E",[[1,169,"可以再"]],[169,169],[172,172]]],[1620892776135,["lixia@LAPTOP-FEL3RH8E",[[-1,171,"再"]],[172,172],[171,171]]],[1620892778030,["lixia@LAPTOP-FEL3RH8E",[[1,171,"在"]],[171,171],[172,172]]],[1620892788910,["lixia@LAPTOP-FEL3RH8E",[[1,177,"被发现；通过配置服务网关，"]],[177,177],[190,190]]],[1620892793131,["lixia@LAPTOP-FEL3RH8E",[[-1,189,"，"]],[190,190],[189,189]]],[1620892795354,["lixia@LAPTOP-FEL3RH8E",[[1,166,"，"]],[166,166],[167,167]]],[1620892799609,["lixia@LAPTOP-FEL3RH8E",[[1,190,"使服务"]],[190,190],[193,193]]],[1620892801526,["lixia@LAPTOP-FEL3RH8E",[[1,190,"，"]],[190,190],[191,191]]],[1620892814643,["lixia@LAPTOP-FEL3RH8E",[[1,194,"可以在局域网外部被发现。        "]],[194,194],[214,214]]],[1620892824458,["lixia@LAPTOP-FEL3RH8E",[[-1,816,"  "],[1,818,"\n"]],[816,816],[817,817]]],[1620892828133,["lixia@LAPTOP-FEL3RH8E",[[1,817,"服务"]],[817,817],[819,819]]],[1620892833912,["lixia@LAPTOP-FEL3RH8E",[[1,143,"和注册"]],[143,143],[146,146]]],[1620892834583,["lixia@LAPTOP-FEL3RH8E",[[-1,144,"注册"]],[146,146],[144,144]]],[1620892835781,["lixia@LAPTOP-FEL3RH8E",[[1,144,"配置"]],[144,144],[146,146]]],[1620892846329,["lixia@LAPTOP-FEL3RH8E",[[1,184,"和访问"]],[184,184],[187,187]]],[1620892849583,["lixia@LAPTOP-FEL3RH8E",[[1,211,"和访问"]],[211,211],[214,214]]],[1620892885138,["lixia@LAPTOP-FEL3RH8E",[[1,828,"被发现后，您可以对服务进行治理，包括路由配置、熔断、限流、监视"]],[828,828],[859,859]]],[1620892891320,["lixia@LAPTOP-FEL3RH8E",[[-1,857,"监视"]],[859,859],[857,857]]],[1620892894007,["lixia@LAPTOP-FEL3RH8E",[[1,857,"调用i但"]],[857,857],[861,861]]],[1620892894944,["lixia@LAPTOP-FEL3RH8E",[[-1,857,"调用i但"]],[861,861],[857,857]]],[1620892920926,["lixia@LAPTOP-FEL3RH8E",[[1,857,"调用链追踪、业务监视等。"]],[857,857],[869,869]]],[1620892922275,["lixia@LAPTOP-FEL3RH8E",[[1,870,"\n"]],[869,869],[870,870]]],[1620893010939,["lixia@LAPTOP-FEL3RH8E",[[-1,871,"### 功能特点\nXXXXX"]],[871,885],[871,871]]],[1620893011566,["lixia@LAPTOP-FEL3RH8E",[[-1,872,"\n"]],[871,871],[870,870]]]],null,"lixia@LAPTOP-FEL3RH8E"],["70ae7a18-e239-4c47-a11f-2f455be038f6",1621994298811,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖编码、部署和运营三个阶段。应用管理对于以上三个阶段的支撑如下图所示。\n\n\n### 应用管理中服务部署与流水线中部署的关系\n\n\n\n### 服务治理\n\n要实现服务治理，首先需要发现和配置服务。Cloud Native通过配置服务引擎，使服务可以在局域网内部被发现和访问；通过配置服务网关，使服务可以在局域网外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Nacos、Istio三种服务引擎类型：\n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。\n\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。   \n\n* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。\n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流、调用链追踪、业务监视等。\n\n\n",[[1621994262648,["lixia@LAPTOP-FEL3RH8E",[[1,55,"DevOps"]],[55,55],[61,61]]],[1621994262974,["lixia@LAPTOP-FEL3RH8E",[[1,61,"\n"]],[61,61],[62,62]]],[1621994263570,["lixia@LAPTOP-FEL3RH8E",[[-1,61,"\n"]],[62,62],[61,61]]],[1621994267446,["lixia@LAPTOP-FEL3RH8E",[[1,61,"liuc"]],[61,61],[65,65]]],[1621994268330,["lixia@LAPTOP-FEL3RH8E",[[-1,61,"liuc"]],[65,65],[61,61]]],[1621994269666,["lixia@LAPTOP-FEL3RH8E",[[1,61,"流程"]],[61,61],[63,63]]],[1621994272487,["lixia@LAPTOP-FEL3RH8E",[[-1,68,"和"],[1,69,"、"]],[68,68],[69,69]]],[1621994273984,["lixia@LAPTOP-FEL3RH8E",[[-1,69,"运营"]],[71,71],[69,69]]],[1621994279757,["lixia@LAPTOP-FEL3RH8E",[[1,69,"运维、监控"]],[69,69],[74,74]]],[1621994282932,["lixia@LAPTOP-FEL3RH8E",[[-1,74,"三个"]],[75,75],[74,74]]],[1621994292301,["lixia@LAPTOP-FEL3RH8E",[[-1,85,"三个"]],[85,86],[85,85]]],[1621994293570,["lixia@LAPTOP-FEL3RH8E",[[1,85,"几个"]],[85,85],[87,87]]],[1621994297392,["lixia@LAPTOP-FEL3RH8E",[[1,98,"    "]],[98,98],[102,102]]],[1621994306233,["lixia@LAPTOP-FEL3RH8E",[[1,103,"<img src=\"fig/制品库-docker-首页.png\" style=\"zoom:50%\">"]],[103,103],[153,153]]],[1621994313372,["lixia@LAPTOP-FEL3RH8E",[[-1,117,"制品库-docker-首页"]],[118,130],[117,117]]],[1621994316349,["lixia@LAPTOP-FEL3RH8E",[[1,117,"应用管理功能"]],[117,117],[123,123]]],[1621994319653,["lixia@LAPTOP-FEL3RH8E",[[-1,148,"### 应用管理中服务部署与流水线中部署的关系\n\n"]],[148,173],[148,148]]],[1621994320053,["lixia@LAPTOP-FEL3RH8E",[[-1,149,"\n"]],[148,148],[148,148]]],[1621994320698,["lixia@LAPTOP-FEL3RH8E",[[-1,148,"\n"]],[148,148],[148,148]]],[1621994324007,["lixia@LAPTOP-FEL3RH8E",[[1,156,"         "]],[156,156],[165,165]]],[1621994325043,["lixia@LAPTOP-FEL3RH8E",[[-1,166,"\n"]],[166,166],[166,166]]],[1621994376728,["lixia@LAPTOP-FEL3RH8E",[[1,98,"应用管理在运维阶段主要实现服务治理功能。"]],[98,98],[118,118]]],[1621994378787,["lixia@LAPTOP-FEL3RH8E",[[1,122,"        "]],[118,118],[126,126]]],[1621994404976,["lixia@LAPTOP-FEL3RH8E",[[-1,921,"、"],[1,922,"等"]],[921,921],[922,922]]],[1621994408069,["lixia@LAPTOP-FEL3RH8E",[[1,922,"操作，"]],[922,922],[925,925]]],[1621994409094,["lixia@LAPTOP-FEL3RH8E",[[-1,924,"，"]],[925,925],[924,924]]],[1621994409683,["lixia@LAPTOP-FEL3RH8E",[[1,924,"。"]],[924,924],[925,925]]],[1621994410473,["lixia@LAPTOP-FEL3RH8E",[[-1,924,"。"]],[925,925],[924,924]]],[1621994410974,["lixia@LAPTOP-FEL3RH8E",[[1,924,"，"]],[924,924],[925,925]]],[1621994412627,["lixia@LAPTOP-FEL3RH8E",[[-1,924,"，"]],[925,925],[924,924]]],[1621994418751,["lixia@LAPTOP-FEL3RH8E",[[1,924,"；也可以监视服务的运行"]],[924,924],[935,935]]],[1621994421591,["lixia@LAPTOP-FEL3RH8E",[[1,935,"情况，包括"]],[935,935],[940,940]]],[1621994431918,["lixia@LAPTOP-FEL3RH8E",[[-1,946,"业务"]],[948,948],[946,946]]],[1621994432692,["lixia@LAPTOP-FEL3RH8E",[[1,946,"服务"]],[946,946],[948,948]]]],null,"lixia@LAPTOP-FEL3RH8E"],["db9e71ea-99cd-4360-8e3f-4d623eeedff2",1623986007703,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖DevOps流程编码、部署、运维、监控阶段。应用管理对于以上几个阶段的支撑如下图所示。应用管理在运维阶段主要实现服务治理功能。            \n<img src=\"fig/应用管理功能.png\" style=\"zoom:50%\">\n\n### 服务治理         \n要实现服务治理，首先需要发现和配置服务。Cloud Native通过配置服务引擎，使服务可以在局域网内部被发现和访问；通过配置服务网关，使服务可以在局域网外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Nacos、Istio三种服务引擎类型：\n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。\n\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。   \n\n* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。\n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n\n",[[1623985967327,["lixia@LAPTOP-FEL3RH8E",[[-1,208,"和配置"]],[208,211],[208,208]]],[1623985976366,["lixia@LAPTOP-FEL3RH8E",[[-1,225,"配置"],[1,227,"添加"]],[225,225],[227,227]]],[1623985985488,["lixia@LAPTOP-FEL3RH8E",[[-1,238,"局域网"],[1,241,"注册"]],[238,238],[240,240]]],[1623985991153,["lixia@LAPTOP-FEL3RH8E",[[1,240,"中心或命名空间"]],[240,240],[247,247]]],[1623985994982,["lixia@LAPTOP-FEL3RH8E",[[-1,258,"配置"]],[260,260],[258,258]]],[1623985997029,["lixia@LAPTOP-FEL3RH8E",[[1,258,"添加"]],[258,258],[260,260]]],[1623986002993,["lixia@LAPTOP-FEL3RH8E",[[-1,271,"局域网"]],[271,274],[271,271]]]],null,"lixia@LAPTOP-FEL3RH8E"],["a7275f0f-792a-4760-bfdf-8c25006fa9fa",1625041058067,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖DevOps流程编码、部署、运维、监控阶段。应用管理对于以上几个阶段的支撑如下图所示。应用管理在运维阶段主要实现服务治理功能。            \n<img src=\"fig/应用管理功能.png\" style=\"zoom:50%\">\n\n### 服务治理         \n要实现服务治理，首先需要发现服务。Cloud Native通过添加服务引擎，使服务可以在注册中心或命名空间内部被发现和访问；通过添加服务网关，使服务可以在外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Nacos、Istio三种服务引擎类型：\n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。\n\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。   \n\n* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。\n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n\n",[[1625041034794,["lixia@LAPTOP-FEL3RH8E",[[-1,318,"Nacos、"]],[318,324],[318,318]]],[1625041036529,["lixia@LAPTOP-FEL3RH8E",[[-1,323,"三"]],[324,324],[323,323]]],[1625041038727,["lixia@LAPTOP-FEL3RH8E",[[1,323,"两"]],[323,323],[324,324]]],[1625041043153,["lixia@LAPTOP-FEL3RH8E",[[-1,648,"* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。"]],[648,883],[648,648]]],[1625041043703,["lixia@LAPTOP-FEL3RH8E",[[-1,649,"\n"]],[648,648],[647,647]]],[1625041046570,["lixia@LAPTOP-FEL3RH8E",[[-1,648,"\n"]],[647,647],[646,646]]],[1625041049371,["lixia@LAPTOP-FEL3RH8E",[[-1,516,"* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。   \n"]],[515,646],[515,515]]],[1625041050618,["lixia@LAPTOP-FEL3RH8E",[[1,333,"\n"]],[332,332],[333,333]]],[1625041051460,["lixia@LAPTOP-FEL3RH8E",[[1,338,"Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。   \n* **"]],[333,333],[464,464]]],[1625041053382,["lixia@LAPTOP-FEL3RH8E",[[-1,333,"\n"]],[333,333],[333,333]]],[1625041055410,["lixia@LAPTOP-FEL3RH8E",[[1,463,"    "]],[463,463],[467,467]]],[1625041056681,["lixia@LAPTOP-FEL3RH8E",[[-1,651,"\n"]],[650,650],[650,650]]]],null,"lixia@LAPTOP-FEL3RH8E"],["ea73a410-86d5-49cc-aa33-d3db33f401aa",1632968451013,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖DevOps流程编码、部署、运维、监控阶段。应用管理对于以上几个阶段的支撑如下图所示。应用管理在运维阶段主要实现服务治理功能。            \n<img src=\"fig/应用管理功能.png\" style=\"zoom:50%\">\n\n### 服务治理         \n要实现服务治理，首先需要发现服务。Cloud Native通过添加服务引擎，使服务可以在注册中心或命名空间内部被发现和访问；通过添加服务网关，使服务可以在外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Istio两种服务引擎类型：\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。       \n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。\n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n\n",[[1632968445067,["lixia@LAPTOP-FEL3RH8E",[[1,468,"  \n"]],[467,467],[470,470]]],[1632968445696,["lixia@LAPTOP-FEL3RH8E",[[-1,468,"  "],[1,470,"\n"]],[470,470],[469,469]]],[1632968446909,["lixia@LAPTOP-FEL3RH8E",[[1,469,"* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。"]],[469,469],[704,704]]],[1632968448109,["lixia@LAPTOP-FEL3RH8E",[[1,705,"  \n"]],[704,704],[707,707]]],[1632968458749,["lixia@LAPTOP-FEL3RH8E",[[1,318,"Nacos、"]],[318,318],[324,324]]],[1632968461964,["lixia@LAPTOP-FEL3RH8E",[[-1,329,"两种"]],[331,331],[329,329]]],[1632968471720,["lixia@LAPTOP-FEL3RH8E",[[1,893,"     "]],[893,893],[898,898]]],[1632971930540,["lixia@LAPTOP-FEL3RH8E",[[1,964,"\n"]],[961,961],[962,962]]],[1632971930957,["lixia@LAPTOP-FEL3RH8E",[[1,965,"\n"]],[962,962],[963,963]]],[1632971942321,["lixia@LAPTOP-FEL3RH8E",[[-1,965,"\n"]],[963,963],[963,963]]]],null,"lixia@LAPTOP-FEL3RH8E"],["900d702a-7af5-4d98-9b87-1b3d290e1045",1633678523643,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖DevOps流程编码、部署、运维、监控阶段。应用管理对于以上几个阶段的支撑如下图所示。应用管理在运维阶段主要实现服务治理功能。            \n<img src=\"fig/应用管理功能.png\" style=\"zoom:50%\">\n\n### 服务治理         \n要实现服务治理，首先需要发现服务。Cloud Native通过添加服务引擎，使服务可以在注册中心或命名空间内部被发现和访问；通过添加服务网关，使服务可以在外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Nacos、Istio服务引擎类型：\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。       \n\n* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。\n  \n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。     \n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n\n\n",[[1633678493866,["lixia@LAPTOP-FEL3RH8E",[[-1,964,"\n"]],[964,964],[963,963]]],[1633678494830,["lixia@LAPTOP-FEL3RH8E",[[-1,963,"\n"]],[963,963],[962,962]]]],null,"lixia@LAPTOP-FEL3RH8E"],["d3c09855-e25b-4960-be13-c4a632a1ad30",1633767130844,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖DevOps流程编码、部署、运维、监控阶段。应用管理对于以上几个阶段的支撑如下图所示。应用管理在运维阶段主要实现服务治理功能。            \n<img src=\"fig/应用管理功能.png\" style=\"zoom:50%\">\n\n### 服务治理         \n要实现服务治理，首先需要发现服务。Cloud Native通过添加服务引擎，使服务可以在注册中心或命名空间内部被发现和访问；通过添加服务网关，使服务可以在外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Nacos、Istio服务引擎类型：\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。       \n\n* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。\n  \n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。     \n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n",[[1633767120339,["lixia@LAPTOP-FEL3RH8E",[[-1,473,"* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。"]],[473,708],[473,473]]],[1633767120734,["lixia@LAPTOP-FEL3RH8E",[[-1,473,"\n"]],[473,473],[472,472]]],[1633767121386,["lixia@LAPTOP-FEL3RH8E",[[-1,472,"\n"]],[472,472],[471,471]]],[1633767125663,["lixia@LAPTOP-FEL3RH8E",[[-1,318,"Nacos、"]],[324,324],[318,318]]]],null,"lixia@LAPTOP-FEL3RH8E"],["8b31a064-c01f-4a1b-909b-0cfc5f3fae0c",1635214758727,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖DevOps流程编码、部署、运维、监控阶段。应用管理对于以上几个阶段的支撑如下图所示。应用管理在运维阶段主要实现服务治理功能。            \n<img src=\"fig/应用管理功能.png\" style=\"zoom:50%\">\n\n### 服务治理         \n要实现服务治理，首先需要发现服务。Cloud Native通过添加服务引擎，使服务可以在注册中心或命名空间内部被发现和访问；通过添加服务网关，使服务可以在外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Istio服务引擎类型：\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。       \n  \n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。     \n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n",[[1635214742754,["lixia@LAPTOP-FEL3RH8E",[[1,469,"  \n"]],[465,465],[468,468]]],[1635214743262,["lixia@LAPTOP-FEL3RH8E",[[1,468,"* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。\n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n"]],[468,468],[768,768]]],[1635214746257,["lixia@LAPTOP-FEL3RH8E",[[-1,768,"\n"]],[768,768],[768,768]]],[1635214747098,["lixia@LAPTOP-FEL3RH8E",[[-1,769," "]],[768,768],[768,768]]],[1635214748227,["lixia@LAPTOP-FEL3RH8E",[[-1,768," "]],[768,768],[768,768]]],[1635214749454,["lixia@LAPTOP-FEL3RH8E",[[-1,768,"\n"]],[768,768],[767,767]]],[1635214751403,["lixia@LAPTOP-FEL3RH8E",[[-1,466,"  "]],[466,468],[466,466]]],[1635214753289,["lixia@LAPTOP-FEL3RH8E",[[1,466,"  \n"]],[465,465],[468,468]]],[1635214757819,["lixia@LAPTOP-FEL3RH8E",[[1,318,"Nacos、"]],[318,318],[324,324]]],[1635216476786,["lixia@LAPTOP-FEL3RH8E",[[1,475,"  \n"]],[471,471],[474,474]]],[1635216479054,["lixia@LAPTOP-FEL3RH8E",[[1,474,"再"]],[474,474],[475,475]]],[1635216479724,["lixia@LAPTOP-FEL3RH8E",[[-1,474,"再"]],[475,475],[474,474]]],[1635216499738,["lixia@LAPTOP-FEL3RH8E",[[1,474,"在本系统中，Spring Cloud采用E"]],[474,474],[495,495]]],[1635216510509,["lixia@LAPTOP-FEL3RH8E",[[1,495,"ureka作为服务发现框架。"]],[495,495],[509,509]]],[1635217772688,["lixia@LAPTOP-FEL3RH8E",[[-1,750,"服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。"]],[750,811],[750,750]]],[1635217773052,["lixia@LAPTOP-FEL3RH8E",[[-1,751,"\n"]],[750,750],[750,750]]],[1635217773615,["lixia@LAPTOP-FEL3RH8E",[[-1,750,"\n"]],[750,750],[750,750]]]],null,"lixia@LAPTOP-FEL3RH8E"],["8ea84345-b43a-4319-9b09-e0f88ad379b2",1639103318014,"---\nenable html: true\n---\n# 应用管理概述\n\nCloud Native的应用管理覆盖DevOps流程编码、部署、运维、监控阶段。应用管理对于以上几个阶段的支撑如下图所示。应用管理在运维阶段主要实现服务治理功能。            \n<img src=\"fig/应用管理功能.png\" style=\"zoom:50%\">\n\n### 服务治理         \n要实现服务治理，首先需要发现服务。Cloud Native通过添加服务引擎，使服务可以在注册中心或命名空间内部被发现和访问；通过添加服务网关，使服务可以在外部被发现和访问。        \nCloud Native当前支持Spring Cloud、Nacos、Istio服务引擎类型：\n* **Spring Cloud**       \n  Spring Cloud是一个基于Spring Boot的微服务开发和治理框架，实现快速构建分布式系统中的常见模式，包括：配置管理、服务注册与发现、智能路由、负载均衡、消息总线、断路器、数据监控等。       \n  在本系统中，Spring Cloud采用Eureka作为服务发现框架。\n  \n* **Nacos**     \n  Nacos是构建以“服务”为中心的服务基础设施，致力于微服务的发现、管理和信息配置，能帮助用户快速实现动态服务发现、服务配置、服务元数据及流量管理，从而更敏捷、更容易的构建、 交付和管理微服务平台。         \n  Nacos支持几乎所有主流类型(诸如: Kubernetes Service. gRPC & Dubbo RPC Service.SpringCloud RESTful Service)的服务发现、配置和管理。\n\n* **Istio**      \n  Istio是基于Serice Mesh的一种服务管理平台，适用于微服务架构。服务之间的通信通过代理来进行。Istio提供服务的连接（例如服务发现、负载均衡、流量控制等）、安全加固、控制（例如访问规则控制）和观察（例如流量）等服务。从而为微服务架构下的故障排查、应用容错性、应用升级发布、系统安全等难题提供了可能的解决方案。     \n\n服务被发现后，您可以对服务进行治理，包括路由配置、熔断、限流等操作；也可以监视服务的运行情况，包括调用链追踪、服务监视等。\n\n",[[1639103300243,["lixia@LAPTOP-FEL3RH8E",[[-1,36,"Cloud Native"],[1,48,"系统"]],[36,36],[38,38]]],[1639103305939,["lixia@LAPTOP-FEL3RH8E",[[-1,201,"Cloud Native"],[1,213,"系统"]],[201,201],[203,203]]],[1639103313336,["lixia@LAPTOP-FEL3RH8E",[[-1,269,"Cloud Native"],[1,281,"系统"]],[269,269],[271,271]]]],null,"lixia@LAPTOP-FEL3RH8E"]]}