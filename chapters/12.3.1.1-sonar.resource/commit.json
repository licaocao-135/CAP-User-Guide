{"compress":true,"commitItems":[["54bb0fa4-12f7-4c22-8a60-0120f8cf0191",1615168551333,"---\nenable html: true\n---\n# Lorem ipsum\n\nLorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed.\n",[[1615168507872,["lixia@LAPTOP-FEL3RH8E",[[-1,28,"Lorem ipsum"],[1,39,"S"]],[28,39],[29,29]]],[1615168508052,["lixia@LAPTOP-FEL3RH8E",[[1,29,"O"]],[29,29],[30,30]]],[1615168509025,["lixia@LAPTOP-FEL3RH8E",[[-1,29,"O"]],[30,30],[29,29]]],[1615168511716,["lixia@LAPTOP-FEL3RH8E",[[1,29,"onar检查"]],[29,29],[35,35]]],[1615168514304,["lixia@LAPTOP-FEL3RH8E",[[-1,37,"Lorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed."]],[37,943],[37,37]]],[1615168515721,["lixia@LAPTOP-FEL3RH8E",[[1,37,"，与“代码检查”服务中的检查任务一致"]],[37,37],[55,55]]],[1615168517673,["lixia@LAPTOP-FEL3RH8E",[[-1,37,"，与"]],[39,39],[37,37]]],[1615168521516,["lixia@LAPTOP-FEL3RH8E",[[-1,51,"一致"],[1,53,"y"]],[51,53],[51,52]]],[1615168522127,["lixia@LAPTOP-FEL3RH8E",[[-1,51,"y"],[1,52,"也是"]],[51,51],[53,53]]],[1615168550372,["lixia@LAPTOP-FEL3RH8E",[[1,53,"Sonar检查。Cloud Native当前不支持流水线的Sonar步骤引用“代码检查”"]],[53,53],[97,97]]],[1615168568887,["lixia@LAPTOP-FEL3RH8E",[[1,97,"任务。但流水线中添加Sonar步骤后，会再"]],[97,97],[118,118]]],[1615168569775,["lixia@LAPTOP-FEL3RH8E",[[-1,117,"再"]],[118,118],[117,117]]],[1615168582857,["lixia@LAPTOP-FEL3RH8E",[[1,117,"在“代码检查”中自动新建一个任务。"]],[117,117],[134,134]]],[1615168583597,["lixia@LAPTOP-FEL3RH8E",[[1,135,"\n"]],[134,134],[135,135]]],[1615168583855,["lixia@LAPTOP-FEL3RH8E",[[1,136,"\n"]],[135,135],[136,136]]],[1615168589303,["lixia@LAPTOP-FEL3RH8E",[[-1,136,"\n"],[1,137,"#"]],[136,136],[137,137]]],[1615168589885,["lixia@LAPTOP-FEL3RH8E",[[1,137,"###"]],[137,137],[140,140]]],[1615168590388,["lixia@LAPTOP-FEL3RH8E",[[-1,139,"#"]],[140,140],[139,139]]],[1615168592563,["lixia@LAPTOP-FEL3RH8E",[[1,139," 背景信息"]],[139,139],[144,144]]],[1615168592836,["lixia@LAPTOP-FEL3RH8E",[[1,144,"\n\n"]],[144,144],[145,145]]],[1615168593441,["lixia@LAPTOP-FEL3RH8E",[[1,145,"，与“代码检查”服务中的检查任务一致"]],[145,145],[163,163]]],[1615168594781,["lixia@LAPTOP-FEL3RH8E",[[-1,145,"，与“代码检查”服务中的检查任务一致"]],[163,163],[145,145]]],[1615168598292,["lixia@LAPTOP-FEL3RH8E",[[1,145,"，与“代码检查”服务中的检查任务一致"]],[145,145],[163,163]]],[1615168599570,["lixia@LAPTOP-FEL3RH8E",[[-1,145,"，与“代码检查”服务中的检查任务一致"]],[163,163],[145,145]]],[1615168604251,["lixia@LAPTOP-FEL3RH8E",[[1,145,"Sonar是一个用于代码质量管理的开源平台，用于管理源代码的质量\n\n通过插件形式，可以支持包括java,C#,C/C++,PL/SQL,Cobol,JavaScrip,Groovy等等二十几种编程语言的代码质量管理与检测\n\nSonar可以从以下七个维度检测代码质量，而作为开发人员至少需要处理前5种代码质量问题\n\n1.  1. 不遵循代码标准\n\nsonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具规范代码编写\n\n1.  2. 潜在的缺陷\n\nsonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具检测出潜在的缺陷\n\n1.  3. 糟糕的复杂度分布\n\n文件、类、方法等，如果复杂度过高将难以改变，这会使得开发人员难以理解它们\n\n且如果没有自动化的单元测试，对于程序中的任何组件的改变都将可能导致需要全面的回归测试\n\n1.  4. 重复\n\n显然程序中包含大量复制粘贴的代码是质量低下的，sonar可以展示源码中重复严重的地方\n\n1.  5. 注释不足或者过多\n\n没有注释将使代码可读性变差，特别是当不可避免地出现人员变动时，程序的可读性将大幅下降\n\n而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷\n\n1.  6. 缺乏单元测试\n\nsonar可以很方便地统计并展示单元测试覆盖率\n\n1.  7. 糟糕的设计\n\n通过sonar可以找出循环，展示包与包、类与类之间的相互依赖关系，可以检测自定义的架构规则\n\n通过sonar可以管理第三方的jar包，可以利用LCOM4检测单个任务规则的应用情况， 检测耦合。"]],[145,145],[835,835]]],[1615168610658,["lixia@LAPTOP-FEL3RH8E",[[-1,162,"开源"]],[162,164],[162,162]]],[1615168629913,["lixia@LAPTOP-FEL3RH8E",[[-1,153,"用于"]],[155,155],[153,153]]],[1615168632189,["lixia@LAPTOP-FEL3RH8E",[[-1,162,"，用于管理源代码的质量"],[1,173,"。"],[-1,304," "],[1,305," "],[-1,370," "],[1,371," "],[-1,436," "],[1,437," "],[-1,535," "],[1,536," "],[-1,590," "],[1,591," "],[-1,687," "],[1,688," "],[-1,727," "],[1,728," "],[-1,825," "],[1,826," "]],[162,173],[163,163]]],[1615168665341,["lixia@LAPTOP-FEL3RH8E",[[1,162,"，支持七个维度检测代码质量"]],[162,162],[175,175]]],[1615168669577,["lixia@LAPTOP-FEL3RH8E",[[1,169,"的"]],[169,169],[170,170]]],[1615168672477,["lixia@LAPTOP-FEL3RH8E",[[-1,170,"检测"]],[170,172],[170,170]]],[1615168674198,["lixia@LAPTOP-FEL3RH8E",[[-1,172,"质量"],[1,174,"j"]],[172,174],[172,173]]],[1615168677176,["lixia@LAPTOP-FEL3RH8E",[[-1,172,"j"],[1,173,"静态"]],[172,172],[174,174]]],[1615168677789,["lixia@LAPTOP-FEL3RH8E",[[1,174,"检测"]],[174,174],[176,176]]],[1615168686343,["lixia@LAPTOP-FEL3RH8E",[[-1,176,"。"]],[177,177],[176,176]]],[1615168686697,["lixia@LAPTOP-FEL3RH8E",[[1,176,"："]],[176,176],[177,177]]],[1615168687754,["lixia@LAPTOP-FEL3RH8E",[[1,179,"\n"]],[177,177],[178,178]]],[1615168718618,["lixia@LAPTOP-FEL3RH8E",[[1,179,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n"]],[178,178],[420,420]]],[1615168723261,["lixia@LAPTOP-FEL3RH8E",[[-1,203,"  Price | Qty |"]],[203,218],[203,203]]],[1615168724739,["lixia@LAPTOP-FEL3RH8E",[[-1,228," -----: | --: |"]],[228,243],[228,228]]],[1615168726120,["lixia@LAPTOP-FEL3RH8E",[[-1,253," $1,300 |   1 |"]],[253,268],[253,253]]],[1615168727667,["lixia@LAPTOP-FEL3RH8E",[[-1,278,"   $800 |   2 |"]],[278,293],[278,278]]],[1615168729133,["lixia@LAPTOP-FEL3RH8E",[[-1,303,"   $400 |   3 |"]],[303,318],[303,303]]],[1615168730539,["lixia@LAPTOP-FEL3RH8E",[[-1,328,"   $350 |   2 |"]],[328,343],[328,328]]],[1615168732899,["lixia@LAPTOP-FEL3RH8E",[[1,206,":"]],[206,206],[207,207]]],[1615168735088,["lixia@LAPTOP-FEL3RH8E",[[1,219,":"]],[219,219],[220,220]]],[1615168738638,["lixia@LAPTOP-FEL3RH8E",[[-1,180," item      "],[1,191,"j"]],[180,191],[181,181]]],[1615168738992,["lixia@LAPTOP-FEL3RH8E",[[1,181,"ianc"]],[181,181],[185,185]]],[1615168740313,["lixia@LAPTOP-FEL3RH8E",[[-1,180,"jianc"]],[185,185],[180,180]]],[1615168743801,["lixia@LAPTOP-FEL3RH8E",[[1,180,"检测未读"]],[180,180],[184,184]]],[1615168750370,["lixia@LAPTOP-FEL3RH8E",[[-1,180,"检测未读"]],[184,184],[180,180]]],[1615168753062,["lixia@LAPTOP-FEL3RH8E",[[1,180,"检查未读"]],[180,180],[184,184]]],[1615168755110,["lixia@LAPTOP-FEL3RH8E",[[-1,174,"检测"]],[176,176],[174,174]]],[1615168756371,["lixia@LAPTOP-FEL3RH8E",[[1,174,"检查"]],[174,174],[176,176]]],[1615168758358,["lixia@LAPTOP-FEL3RH8E",[[-1,182,"未读"]],[183,183],[182,182]]],[1615168759737,["lixia@LAPTOP-FEL3RH8E",[[1,182,"维度"]],[182,182],[184,184]]],[1615168763253,["lixia@LAPTOP-FEL3RH8E",[[-1,185," Model   "],[1,194,"s"]],[185,194],[185,186]]],[1615168763942,["lixia@LAPTOP-FEL3RH8E",[[-1,185,"s"],[1,186,"说明"]],[185,185],[187,187]]],[1615168778496,["lixia@LAPTOP-FEL3RH8E",[[-1,218," Laptop   "],[1,228,"代码标准"]],[218,228],[222,222]]],[1615168784019,["lixia@LAPTOP-FEL3RH8E",[[-1,224," 13\" Pro  "],[1,234,"sonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具规范代码编写"]],[224,234],[272,272]]],[1615168796685,["lixia@LAPTOP-FEL3RH8E",[[-1,224,"sonar可以"]],[224,231],[224,224]]],[1615168798687,["lixia@LAPTOP-FEL3RH8E",[[-1,229,","],[1,230,"、"]],[229,230],[230,230]]],[1615168800038,["lixia@LAPTOP-FEL3RH8E",[[-1,240,","],[1,241,"、"]],[240,240],[241,241]]],[1615168801156,["lixia@LAPTOP-FEL3RH8E",[[-1,250,"等"]],[251,251],[250,250]]],[1615168806284,["lixia@LAPTOP-FEL3RH8E",[[1,264,"。"]],[264,264],[265,265]]],[1615168809390,["lixia@LAPTOP-FEL3RH8E",[[-1,220,"标准"],[1,222,"g"]],[220,222],[220,221]]],[1615168810181,["lixia@LAPTOP-FEL3RH8E",[[-1,220,"g"],[1,221,"规范"]],[220,220],[222,222]]],[1615168823435,["lixia@LAPTOP-FEL3RH8E",[[-1,268," Phone     "],[1,279,"潜在的缺陷"]],[268,279],[273,273]]],[1615168834767,["lixia@LAPTOP-FEL3RH8E",[[-1,274," Plus     "],[1,284,"通过PMD、CheckStyle、Findbugs等代码规则检测工具规范代码编写。"]],[274,284],[315,315]]],[1615168843262,["lixia@LAPTOP-FEL3RH8E",[[-1,308,"规范代码编写"],[1,314,"j"]],[308,314],[308,309]]],[1615168845935,["lixia@LAPTOP-FEL3RH8E",[[-1,308,"j"],[1,309,"检测出"]],[308,308],[311,311]]],[1615168852934,["lixia@LAPTOP-FEL3RH8E",[[1,311,"潜在的缺陷"]],[311,311],[316,316]]],[1615168864053,["lixia@LAPTOP-FEL3RH8E",[[1,258,"检查代码"]],[258,258],[262,262]]],[1615168866674,["lixia@LAPTOP-FEL3RH8E",[[-1,264,"代码编写"]],[264,268],[264,264]]],[1615168899177,["lixia@LAPTOP-FEL3RH8E",[[-1,320," Watch     "],[1,331,"f"]],[320,331],[320,321]]],[1615168900267,["lixia@LAPTOP-FEL3RH8E",[[-1,320,"f"],[1,321,"复杂度"]],[320,320],[323,323]]],[1615168913037,["lixia@LAPTOP-FEL3RH8E",[[-1,324," Series 3 "],[1,334,"j"]],[324,334],[324,325]]],[1615168913916,["lixia@LAPTOP-FEL3RH8E",[[-1,324,"j"],[1,325,"检测"]],[324,324],[326,326]]],[1615168918656,["lixia@LAPTOP-FEL3RH8E",[[1,326,"文件、类、方法等的复杂度。"]],[326,326],[339,339]]],[1615168926182,["lixia@LAPTOP-FEL3RH8E",[[-1,342," Headphone "],[1,353,"c"]],[342,353],[342,343]]],[1615168926958,["lixia@LAPTOP-FEL3RH8E",[[-1,342,"c"],[1,343,"重复"]],[342,342],[344,344]]],[1615168957297,["lixia@LAPTOP-FEL3RH8E",[[-1,345," HD650    "],[1,355,"j"]],[345,355],[345,346]]],[1615168958022,["lixia@LAPTOP-FEL3RH8E",[[-1,345,"j"],[1,346,"检测"]],[345,345],[347,347]]],[1615168961890,["lixia@LAPTOP-FEL3RH8E",[[1,347,"重复的代码，"]],[347,347],[353,353]]],[1615168962505,["lixia@LAPTOP-FEL3RH8E",[[-1,352,"，"]],[353,353],[352,352]]],[1615168963001,["lixia@LAPTOP-FEL3RH8E",[[1,352,"。"]],[352,352],[353,353]]],[1615168964665,["lixia@LAPTOP-FEL3RH8E",[[1,355,"|            |           |\n"]],[354,354],[356,368]]],[1615168966585,["lixia@LAPTOP-FEL3RH8E",[[1,382,"|            |           |\n"]],[354,354],[356,368]]],[1615168971212,["lixia@LAPTOP-FEL3RH8E",[[1,409,"|            |           |\n"]],[354,354],[356,368]]],[1615168978857,["lixia@LAPTOP-FEL3RH8E",[[-1,356,"            "],[1,368,"注释不足或者过多"]],[356,368],[364,364]]],[1615168988801,["lixia@LAPTOP-FEL3RH8E",[[-1,365,"           "],[1,376,"没有注释将使代码可读性变差，特别是当不可避免地出现人员变动时，程序的可读性将大幅下降\n\n而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷"]],[365,376],[443,443]]],[1615168998679,["lixia@LAPTOP-FEL3RH8E",[[-1,378,"，特别是当不可避免地出现人员变动时，程序的可读性将大幅下降"],[1,407,"。"]],[378,407],[379,379]]],[1615169000235,["lixia@LAPTOP-FEL3RH8E",[[-1,380,"\n"]],[379,379],[379,379]]],[1615169000795,["lixia@LAPTOP-FEL3RH8E",[[-1,379,"\n"]],[379,379],[379,379]]],[1615169008302,["lixia@LAPTOP-FEL3RH8E",[[1,413,"。"]],[413,413],[414,414]]],[1615169017835,["lixia@LAPTOP-FEL3RH8E",[[-1,417,"           "],[1,428,"缺乏单元测试"]],[417,428],[423,423]]],[1615169019922,["lixia@LAPTOP-FEL3RH8E",[[-1,417,"缺乏"]],[419,419],[417,417]]],[1615169021655,["lixia@LAPTOP-FEL3RH8E",[[-1,421," "]],[422,422],[421,421]]],[1615169023236,["lixia@LAPTOP-FEL3RH8E",[[1,421,"覆盖率"]],[421,421],[424,424]]],[1615169043708,["lixia@LAPTOP-FEL3RH8E",[[-1,425,"           "],[1,436,"统计并展示单元测试覆盖率"]],[425,436],[437,437]]],[1615169045124,["lixia@LAPTOP-FEL3RH8E",[[1,437,"。"]],[437,437],[438,438]]],[1615169053072,["lixia@LAPTOP-FEL3RH8E",[[-1,441,"           "],[1,452,"糟糕的设计"]],[441,452],[446,446]]],[1615169056406,["lixia@LAPTOP-FEL3RH8E",[[-1,1022,"通过sonar可以找出循环，展示包与包、类与类之间的相互依赖关系，可以检测自定义的架构规则\n\n通过sonar可以管理第三方的jar包，可以利用LCOM4检测单个任务规则的应用情况， 检测耦合。"]],[1022,1118],[1022,1022]]],[1615169059589,["lixia@LAPTOP-FEL3RH8E",[[-1,448,"           "],[1,459,"通过sonar可以找出循环，展示包与包、类与类之间的相互依赖关系，可以检测自定义的架构规则\n\n通过sonar可以管理第三方的jar包，可以利用LCOM4检测单个任务规则的应用情况， 检测耦合。"]],[448,459],[544,544]]],[1615169065018,["lixia@LAPTOP-FEL3RH8E",[[-1,448,"通过sonar可以找出"],[1,459,"j"]],[448,459],[448,449]]],[1615169066438,["lixia@LAPTOP-FEL3RH8E",[[-1,448,"j"],[1,449,"检测"]],[448,448],[450,450]]],[1615169069000,["lixia@LAPTOP-FEL3RH8E",[[-1,452,"，"],[1,453,"、"]],[452,452],[453,453]]],[1615169074191,["lixia@LAPTOP-FEL3RH8E",[[-1,452,"、展示"]],[455,455],[452,452]]],[1615169075175,["lixia@LAPTOP-FEL3RH8E",[[1,452,"，"]],[452,452],[453,453]]],[1615169077556,["lixia@LAPTOP-FEL3RH8E",[[-1,452,"，"]],[453,453],[452,452]]],[1615169078681,["lixia@LAPTOP-FEL3RH8E",[[1,452,"、"]],[452,452],[453,453]]],[1615169086157,["lixia@LAPTOP-FEL3RH8E",[[-1,483,"\n"]],[482,482],[482,482]]],[1615169086643,["lixia@LAPTOP-FEL3RH8E",[[-1,482,"\n"]],[482,482],[482,482]]],[1615169088775,["lixia@LAPTOP-FEL3RH8E",[[1,482,"。"]],[482,482],[483,483]]],[1615169107124,["lixia@LAPTOP-FEL3RH8E",[[-1,470,"可以检测自定义的架构规则。通过sonar可以"]],[470,492],[470,470]]],[1615169112134,["lixia@LAPTOP-FEL3RH8E",[[-1,480,"，可以利用LCOM4检测单个任务规则的应用情况，"]],[481,504],[480,480]]],[1615169117696,["lixia@LAPTOP-FEL3RH8E",[[-1,480," "],[1,481,"，"]],[480,481],[481,481]]],[1615169120152,["lixia@LAPTOP-FEL3RH8E",[[1,485,"等"]],[485,485],[486,486]]],[1615169124704,["lixia@LAPTOP-FEL3RH8E",[[-1,568,"Sonar可以从以下七个维度检测代码质量，而作为开发人员至少需要处理前5种代码质量问题\n\n1.  1. 不遵循代码标准\n\nsonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具规范代码编写\n\n1.  2. 潜在的缺陷\n\nsonar可以通过PMD,CheckStyle,Findbugs等等代码规则检测工具检测出潜在的缺陷\n\n1.  3. 糟糕的复杂度分布\n\n文件、类、方法等，如果复杂度过高将难以改变，这会使得开发人员难以理解它们\n\n且如果没有自动化的单元测试，对于程序中的任何组件的改变都将可能导致需要全面的回归测试\n\n1.  4. 重复\n\n显然程序中包含大量复制粘贴的代码是质量低下的，sonar可以展示源码中重复严重的地方\n\n1.  5. 注释不足或者过多\n\n没有注释将使代码可读性变差，特别是当不可避免地出现人员变动时，程序的可读性将大幅下降\n\n而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷\n\n1.  6. 缺乏单元测试\n\nsonar可以很方便地统计并展示单元测试覆盖率\n\n1.  7. 糟糕的设计"]],[568,1048],[568,568]]],[1615169125629,["lixia@LAPTOP-FEL3RH8E",[[-1,570,"\n"]],[568,568],[567,567]]],[1615169136153,["lixia@LAPTOP-FEL3RH8E",[[-1,490,"通过插件形式，可以"],[1,499,"S"]],[490,499],[491,491]]],[1615169137225,["lixia@LAPTOP-FEL3RH8E",[[1,491,"onar"]],[491,491],[495,495]]],[1615169141162,["lixia@LAPTOP-FEL3RH8E",[[1,497,"的语言"]],[497,497],[500,500]]],[1615169143541,["lixia@LAPTOP-FEL3RH8E",[[-1,506,","],[1,507,"、"]],[506,507],[507,507]]],[1615169144700,["lixia@LAPTOP-FEL3RH8E",[[-1,509,","],[1,510,"、"]],[509,510],[510,510]]],[1615169145991,["lixia@LAPTOP-FEL3RH8E",[[-1,515,","],[1,516,"、"]],[515,516],[516,516]]],[1615169147674,["lixia@LAPTOP-FEL3RH8E",[[-1,522,","],[1,523,"、"]],[522,523],[523,523]]],[1615169149947,["lixia@LAPTOP-FEL3RH8E",[[-1,528,","],[1,529,"、"]],[528,528],[529,529]]],[1615169151396,["lixia@LAPTOP-FEL3RH8E",[[-1,538,","],[1,539,"、"]],[538,539],[539,539]]],[1615169156894,["lixia@LAPTOP-FEL3RH8E",[[-1,546,"等二十几种编程语言的代码质量管理与检测"]],[547,547],[546,546]]],[1615169157640,["lixia@LAPTOP-FEL3RH8E",[[1,546,"。"]],[546,546],[547,547]]],[1615169158695,["lixia@LAPTOP-FEL3RH8E",[[1,551,"\n"]],[548,548],[549,549]]],[1615169167902,["lixia@LAPTOP-FEL3RH8E",[[1,549,"### 操作步骤"]],[549,549],[557,557]]],[1615169168182,["lixia@LAPTOP-FEL3RH8E",[[1,560,"\n"]],[557,557],[558,558]]],[1615169199288,["lixia@LAPTOP-FEL3RH8E",[[1,558,"1. 在流水线任务编辑界面中，添加“Sonar”步骤。"]],[558,558],[585,585]]],[1615169199701,["lixia@LAPTOP-FEL3RH8E",[[1,586,"2. \n"]],[585,585],[589,589]]]],null,"lixia@LAPTOP-FEL3RH8E"],["2252abc2-8d2f-4d26-979e-81a33c72767c",1615348291002,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。Cloud Native当前不支持流水线的Sonar步骤引用“代码检查”任务。但流水线中添加Sonar步骤后，会在“代码检查”中自动新建一个任务。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy等。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“Sonar”步骤。\n2. \n\n\n",[[1615348253109,["lixia@LAPTOP-FEL3RH8E",[[1,590,"配置"]],[590,590],[592,592]]],[1615348253433,["lixia@LAPTOP-FEL3RH8E",[[-1,590,"配置"]],[592,592],[590,590]]],[1615348253600,["lixia@LAPTOP-FEL3RH8E",[[-1,591,"\n"]],[590,590],[589,589]]],[1615348259481,["lixia@LAPTOP-FEL3RH8E",[[1,589,"配置sonar步骤。"]],[589,589],[599,599]]],[1615348259824,["lixia@LAPTOP-FEL3RH8E",[[1,600,"3. \n"]],[599,599],[603,603]]],[1615348261039,["lixia@LAPTOP-FEL3RH8E",[[-1,600,"3. "]],[603,603],[600,600]]],[1615348289808,["lixia@LAPTOP-FEL3RH8E",[[1,600,"     设置步骤名称和编程语言，然后设置质量门禁："]],[600,600],[626,626]]],[1615348309421,["lixia@LAPTOP-FEL3RH8E",[[1,626,"将需要盘"]],[626,626],[630,630]]],[1615348309897,["lixia@LAPTOP-FEL3RH8E",[[-1,629,"盘"]],[630,630],[629,629]]],[1615348345024,["lixia@LAPTOP-FEL3RH8E",[[1,629,"判断的问题级别开关置为ON（蓝色），然后设置门禁。表示：检查"]],[629,629],[659,659]]],[1615348347345,["lixia@LAPTOP-FEL3RH8E",[[-1,657,"检查"]],[659,659],[657,657]]],[1615348356755,["lixia@LAPTOP-FEL3RH8E",[[1,657,"sonar代码检查出的问题"]],[657,657],[670,670]]],[1615348366492,["lixia@LAPTOP-FEL3RH8E",[[1,668,"对应"]],[668,668],[670,670]]],[1615348368552,["lixia@LAPTOP-FEL3RH8E",[[1,672,"界别"]],[672,672],[674,674]]],[1615348369411,["lixia@LAPTOP-FEL3RH8E",[[-1,672,"界别"]],[674,674],[672,672]]],[1615348381507,["lixia@LAPTOP-FEL3RH8E",[[1,672,"级别的问题数小于等于门禁时，S"]],[672,672],[687,687]]],[1615348382166,["lixia@LAPTOP-FEL3RH8E",[[-1,686,"S"]],[687,687],[686,686]]],[1615348387368,["lixia@LAPTOP-FEL3RH8E",[[1,686,"sonar检查通过。否则"]],[686,686],[698,698]]],[1615348387965,["lixia@LAPTOP-FEL3RH8E",[[-1,695,"。否则"]],[698,698],[695,695]]],[1615348388705,["lixia@LAPTOP-FEL3RH8E",[[1,695,"’"]],[695,695],[696,696]]],[1615348389174,["lixia@LAPTOP-FEL3RH8E",[[-1,695,"’"]],[696,696],[695,695]]],[1615348399445,["lixia@LAPTOP-FEL3RH8E",[[1,695,"；否则不通过。设置多个"]],[695,695],[706,706]]],[1615348413546,["lixia@LAPTOP-FEL3RH8E",[[1,706,"界别的"]],[706,706],[709,709]]],[1615348414076,["lixia@LAPTOP-FEL3RH8E",[[-1,706,"界别的"]],[709,709],[706,706]]],[1615348434058,["lixia@LAPTOP-FEL3RH8E",[[1,706,"级别的门禁时，需同时满足条件，检查方能公国。"]],[706,706],[728,728]]],[1615348434738,["lixia@LAPTOP-FEL3RH8E",[[-1,725,"公国。"]],[728,728],[725,725]]],[1615348436023,["lixia@LAPTOP-FEL3RH8E",[[1,725,"通过。"]],[725,725],[728,728]]],[1615348439661,["lixia@LAPTOP-FEL3RH8E",[[1,729,"     \n"]],[728,728],[734,734]]],[1615348492061,["lixia@LAPTOP-FEL3RH8E",[[1,605,"\n     "]],[605,605],[611,611]]],[1615348496879,["lixia@LAPTOP-FEL3RH8E",[[1,632,"\n     \n     "]],[632,632],[644,644]]],[1615348498297,["lixia@LAPTOP-FEL3RH8E",[[1,753,"     \n"]],[746,746],[752,752]]],[1615348499073,["lixia@LAPTOP-FEL3RH8E",[[-1,747,"     "],[1,752,"\n"]],[752,752],[748,748]]],[1615348508564,["lixia@LAPTOP-FEL3RH8E",[[1,747,"     <img src=\"fig/流水线-docker-配置.png\" style=\"zoom:50%\">"]],[747,747],[802,802]]],[1615348510303,["lixia@LAPTOP-FEL3RH8E",[[1,752,"\n     "]],[752,752],[758,758]]],[1615348513453,["lixia@LAPTOP-FEL3RH8E",[[-1,776,"docker-配置"],[1,785,"s"]],[776,785],[776,777]]],[1615348514294,["lixia@LAPTOP-FEL3RH8E",[[1,777,"onar"]],[776,776],[781,781]]],[1615348516424,["lixia@LAPTOP-FEL3RH8E",[[-1,806,"     "]],[806,811],[806,806]]],[1615348516654,["lixia@LAPTOP-FEL3RH8E",[[-1,807,"\n"]],[806,806],[805,805]]]],null,"lixia@LAPTOP-FEL3RH8E"],["1d14e3eb-52f5-486e-899c-890f1d843e05",1615370311490,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。Cloud Native当前不支持流水线的Sonar步骤引用“代码检查”任务。但流水线中添加Sonar步骤后，会在“代码检查”中自动新建一个任务。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy等。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“Sonar”步骤。\n2. 配置sonar步骤。\n     \n     设置步骤名称和编程语言，然后设置质量门禁：\n     \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。表示：sonar代码检查出的对应问题级别的问题数小于等于门禁时，sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。\n     \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1615370279212,["lixia@LAPTOP-FEL3RH8E",[[1,134,"D"]],[134,134],[135,135]]],[1615370279803,["lixia@LAPTOP-FEL3RH8E",[[-1,134,"D"]],[135,135],[134,134]]],[1615370282934,["lixia@LAPTOP-FEL3RH8E",[[1,134,"代码检查"]],[134,134],[138,138]]],[1615370284288,["lixia@LAPTOP-FEL3RH8E",[[-1,134,"代码检查"]],[138,138],[134,134]]],[1615370296044,["lixia@LAPTOP-FEL3RH8E",[[1,134,"名称为“<流水线名称>——"]],[134,134],[147,147]]],[1615370296881,["lixia@LAPTOP-FEL3RH8E",[[-1,145,"——"]],[147,147],[145,145]]],[1615370297476,["lixia@LAPTOP-FEL3RH8E",[[1,145,"__"]],[145,145],[146,146]]],[1615370298829,["lixia@LAPTOP-FEL3RH8E",[[-1,146,"_"]],[146,146],[146,146]]],[1615370299311,["lixia@LAPTOP-FEL3RH8E",[[1,146,"pipeline-05_自动生成的代码检查任务"]],[146,146],[169,169]]],[1615370302999,["lixia@LAPTOP-FEL3RH8E",[[-1,146,"pipeline-05_"]],[146,158],[146,146]]],[1615370305299,["lixia@LAPTOP-FEL3RH8E",[[1,157,"\""]],[157,157],[158,158]]],[1615370305351,["lixia@LAPTOP-FEL3RH8E",[[-1,157,"\""],[1,158,"”"]],[158,158],[158,158]]],[1615370305466,["lixia@LAPTOP-FEL3RH8E",[[1,158,"\""]],[158,158],[159,159]]],[1615370305520,["lixia@LAPTOP-FEL3RH8E",[[-1,158,"\""],[1,159,"“"]],[159,159],[159,159]]],[1615370306005,["lixia@LAPTOP-FEL3RH8E",[[-1,158,"“"]],[159,159],[158,158]]],[1615370306945,["lixia@LAPTOP-FEL3RH8E",[[1,158,"."]],[158,158],[159,159]]],[1615370307520,["lixia@LAPTOP-FEL3RH8E",[[-1,158,"."]],[159,159],[158,158]]],[1615370307982,["lixia@LAPTOP-FEL3RH8E",[[1,158,"。"]],[158,158],[159,159]]],[1615370308863,["lixia@LAPTOP-FEL3RH8E",[[-1,157,"”。"]],[159,159],[157,157]]],[1615370310689,["lixia@LAPTOP-FEL3RH8E",[[1,157,"”。"]],[157,157],[159,159]]],[1615370345280,["lixia@LAPTOP-FEL3RH8E",[[-1,697,"表示"],[1,699,"h"]],[697,699],[697,698]]],[1615370346019,["lixia@LAPTOP-FEL3RH8E",[[-1,697,"h"],[1,698,"含义"]],[697,697],[699,699]]],[1615370346492,["lixia@LAPTOP-FEL3RH8E",[[1,699,"为"]],[699,699],[700,700]]]],null,"lixia@LAPTOP-FEL3RH8E"],["402b23d2-5f13-4a06-abb4-d5f7fdb2ba6d",1620370070504,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。Cloud Native当前不支持流水线的Sonar步骤引用“代码检查”任务。但流水线中添加Sonar步骤后，会在“代码检查”中自动新建一个任务。名称为“<流水线名称>_自动生成的代码检查任务”。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy等。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“Sonar”步骤。\n2. 配置sonar步骤。\n     \n     设置步骤名称和编程语言，然后设置质量门禁：\n     \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。含义为：sonar代码检查出的对应问题级别的问题数小于等于门禁时，sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。\n     \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1620370069842,["lixia@LAPTOP-FEL3RH8E",[[1,572,"Cloud Native的Sonar代码检查当前只支持java和JavaScrip两种语言。"]],[572,572],[618,618]]],[1620370076852,["lixia@LAPTOP-FEL3RH8E",[[-1,662,"s"]],[663,663],[662,662]]],[1620370077255,["lixia@LAPTOP-FEL3RH8E",[[1,662,"S"]],[662,662],[663,663]]],[1620370079711,["lixia@LAPTOP-FEL3RH8E",[[1,670,"     "]],[670,670],[675,675]]],[1620370080449,["lixia@LAPTOP-FEL3RH8E",[[-1,675,"\n"]],[675,675],[675,675]]],[1620370082598,["lixia@LAPTOP-FEL3RH8E",[[1,707,"       "]],[707,707],[714,714]]],[1620370083185,["lixia@LAPTOP-FEL3RH8E",[[-1,714,"\n"]],[714,714],[714,714]]],[1620370084859,["lixia@LAPTOP-FEL3RH8E",[[1,828,"     "]],[828,828],[833,833]]],[1620370085597,["lixia@LAPTOP-FEL3RH8E",[[-1,833,"\n"]],[833,833],[833,833]]],[1620370087137,["lixia@LAPTOP-FEL3RH8E",[[-1,757,"s"],[1,758,"S"]],[757,758],[758,758]]],[1620370089567,["lixia@LAPTOP-FEL3RH8E",[[-1,786,"s"],[1,787,"S"]],[786,787],[787,787]]]],null,"lixia@LAPTOP-FEL3RH8E"],["cc3ea547-4229-4bfe-b084-4233631dbc9c",1620380788449,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。Cloud Native当前不支持流水线的Sonar步骤引用“代码检查”任务。但流水线中添加Sonar步骤后，会在“代码检查”中自动新建一个任务。名称为“<流水线名称>_自动生成的代码检查任务”。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy等。Cloud Native的Sonar代码检查当前只支持java和JavaScrip两种语言。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“Sonar”步骤。\n2. 配置Sonar步骤。          \n     设置步骤名称和编程语言，然后设置质量门禁：            \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。含义为：Sonar代码检查出的对应问题级别的问题数小于等于门禁时，Sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。          \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1620380778788,["lixia@LAPTOP-FEL3RH8E",[[-1,61,"Cloud Native当前不支持流水线的Sonar步骤引用“代码检查”任务。但"]],[61,101],[61,61]]]],null,"lixia@LAPTOP-FEL3RH8E"],["542efb53-d4b5-47bb-a19a-9ef1e98729cc",1622708091585,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。流水线中添加Sonar步骤后，会在“代码检查”中自动新建一个任务。名称为“<流水线名称>_自动生成的代码检查任务”。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy等。Cloud Native的Sonar代码检查当前只支持java和JavaScrip两种语言。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“Sonar”步骤。\n2. 配置Sonar步骤。          \n     设置步骤名称和编程语言，然后设置质量门禁：            \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。含义为：Sonar代码检查出的对应问题级别的问题数小于等于门禁时，Sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。          \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1622708070325,["lixia@LAPTOP-FEL3RH8E",[[-1,563,"和"],[1,564,"\\"]],[563,564],[564,564]]],[1622708071476,["lixia@LAPTOP-FEL3RH8E",[[-1,563,"\\"]],[564,564],[563,563]]],[1622708071818,["lixia@LAPTOP-FEL3RH8E",[[1,563,"\\"]],[563,563],[564,564]]],[1622708071882,["lixia@LAPTOP-FEL3RH8E",[[-1,563,"\\"],[1,564,"、"]],[564,564],[564,564]]],[1622708076417,["lixia@LAPTOP-FEL3RH8E",[[1,530,"\\"]],[530,530],[531,531]]],[1622708076483,["lixia@LAPTOP-FEL3RH8E",[[-1,530,"\\"],[1,531,"、"]],[531,531],[531,531]]],[1622708080121,["lixia@LAPTOP-FEL3RH8E",[[1,531,"PHP"]],[531,531],[534,534]]],[1622708084854,["lixia@LAPTOP-FEL3RH8E",[[1,577,"、PHP"]],[577,577],[581,581]]],[1622708086361,["lixia@LAPTOP-FEL3RH8E",[[-1,580,"P"]],[581,581],[580,580]]],[1622708087869,["lixia@LAPTOP-FEL3RH8E",[[1,580,"P"]],[580,580],[581,581]]],[1622708089049,["lixia@LAPTOP-FEL3RH8E",[[-1,581,"两"]],[581,581],[581,581]]],[1622708090761,["lixia@LAPTOP-FEL3RH8E",[[1,581,"三"]],[581,581],[582,582]]]],null,"lixia@LAPTOP-FEL3RH8E"],["3e43e3d2-6d15-4be2-b774-6ef5858fa1e1",1626075251120,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。流水线中添加Sonar步骤后，会在“代码检查”中自动新建一个任务。名称为“<流水线名称>_自动生成的代码检查任务”。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy、PHP等。Cloud Native的Sonar代码检查当前只支持java、JavaScrip、PHP三种语言。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“Sonar”步骤。\n2. 配置Sonar步骤。          \n     设置步骤名称和编程语言，然后设置质量门禁：            \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。含义为：Sonar代码检查出的对应问题级别的问题数小于等于门禁时，Sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。          \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1626075248314,["lixia@LAPTOP-FEL3RH8E",[[1,61,"n"]],[61,61],[62,62]]],[1626075248795,["lixia@LAPTOP-FEL3RH8E",[[-1,61,"n"]],[62,62],[61,61]]],[1626075249022,["lixia@LAPTOP-FEL3RH8E",[[1,61,"z"]],[61,61],[62,62]]],[1626075249469,["lixia@LAPTOP-FEL3RH8E",[[-1,61,"z"]],[62,62],[61,61]]],[1626075250477,["lixia@LAPTOP-FEL3RH8E",[[1,61,"在"]],[61,61],[62,62]]],[1626075257432,["lixia@LAPTOP-FEL3RH8E",[[1,62,"配置Sonar检查任务时，你能可以"]],[62,62],[79,79]]],[1626075258287,["lixia@LAPTOP-FEL3RH8E",[[-1,75,"你能可以"]],[79,79],[75,75]]],[1626075272446,["lixia@LAPTOP-FEL3RH8E",[[1,75,"您可以关联已有的代码检查任务，也可以新建一个"]],[75,75],[97,97]]],[1626075274236,["lixia@LAPTOP-FEL3RH8E",[[-1,95,"一个"]],[97,97],[95,95]]],[1626075283170,["lixia@LAPTOP-FEL3RH8E",[[1,95,"任务。选择新建任务后，"]],[95,95],[106,106]]],[1626075285714,["lixia@LAPTOP-FEL3RH8E",[[-1,104,"后"]],[105,105],[104,104]]],[1626075286888,["lixia@LAPTOP-FEL3RH8E",[[1,104,"时"]],[104,104],[105,105]]],[1626075287057,["lixia@LAPTOP-FEL3RH8E",[[1,106,"，"]],[105,105],[106,106]]],[1626075290865,["lixia@LAPTOP-FEL3RH8E",[[1,106,"步骤执行后"]],[106,106],[111,111]]],[1626075296063,["lixia@LAPTOP-FEL3RH8E",[[-1,111,"，流水线中添加Sonar步骤后"]],[111,111],[111,111]]],[1626075298095,["lixia@LAPTOP-FEL3RH8E",[[1,112,"系统"]],[112,112],[114,114]]],[1626075325610,["lixia@LAPTOP-FEL3RH8E",[[-1,698,"和"],[1,699,"、"]],[698,698],[699,699]]],[1626075330291,["lixia@LAPTOP-FEL3RH8E",[[1,699,"任务类型，"]],[699,699],[704,704]]],[1626075331250,["lixia@LAPTOP-FEL3RH8E",[[-1,703,"，"]],[704,704],[703,703]]],[1626075331902,["lixia@LAPTOP-FEL3RH8E",[[1,703,"、"]],[703,703],[704,704]]],[1626075332773,["lixia@LAPTOP-FEL3RH8E",[[-1,703,"、"]],[704,704],[703,703]]],[1626075333405,["lixia@LAPTOP-FEL3RH8E",[[1,703,"和"]],[703,703],[704,704]]],[1626075634888,["lixia@LAPTOP-FEL3RH8E",[[1,653,"代码检查 > "]],[653,653],[660,660]]],[1626075650718,["lixia@LAPTOP-FEL3RH8E",[[1,665,"jian"]],[665,665],[669,669]]],[1626075651669,["lixia@LAPTOP-FEL3RH8E",[[-1,665,"jian"]],[669,669],[665,665]]],[1626075652727,["lixia@LAPTOP-FEL3RH8E",[[1,665,"检查"]],[665,665],[667,667]]],[1626076364894,["lixia@LAPTOP-FEL3RH8E",[[1,144,"随机码__"]],[144,144],[148,148]]],[1626076367213,["lixia@LAPTOP-FEL3RH8E",[[-1,148,"_"]],[148,148],[147,147]]],[1626076369337,["lixia@LAPTOP-FEL3RH8E",[[1,144,"《"]],[144,144],[145,145]]],[1626076370434,["lixia@LAPTOP-FEL3RH8E",[[-1,144,"《"]],[145,145],[144,144]]],[1626076370934,["lixia@LAPTOP-FEL3RH8E",[[1,144,"<"]],[144,144],[145,145]]],[1626076373018,["lixia@LAPTOP-FEL3RH8E",[[1,148,">"]],[148,148],[149,149]]],[1626076380450,["lixia@LAPTOP-FEL3RH8E",[[-1,143,"_"],[1,144,"——"]],[143,143],[145,145]]],[1626076381696,["lixia@LAPTOP-FEL3RH8E",[[-1,143,"——"]],[145,145],[143,143]]],[1626076382767,["lixia@LAPTOP-FEL3RH8E",[[1,143,"_"]],[143,143],[144,144]]]],null,"lixia@LAPTOP-FEL3RH8E"],["050b1719-f632-4fc2-b416-5240541111c8",1626664213647,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。在配置Sonar检查任务时，您可以关联已有的代码检查任务，也可以新建任务。选择新建任务时，步骤执行后，系统会在“代码检查”中自动新建一个任务。名称为“<流水线名称>_<随机码>_自动生成的代码检查任务”。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy、PHP等。Cloud Native的Sonar代码检查当前只支持java、JavaScrip、PHP三种语言。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“代码检查 > Sonar检查”步骤。\n2. 配置Sonar步骤。          \n     设置步骤名称、任务类型和编程语言，然后设置质量门禁：            \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。含义为：Sonar代码检查出的对应问题级别的问题数小于等于门禁时，Sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。          \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1626664173814,["lixia@LAPTOP-FEL3RH8E",[[1,132,"<p>"]],[132,132],[135,135]]],[1626664179789,["lixia@LAPTOP-FEL3RH8E",[[1,165,"</p>"]],[165,165],[169,169]]],[1626664182319,["lixia@LAPTOP-FEL3RH8E",[[-1,146,"_"]],[147,147],[146,146]]],[1626664183427,["lixia@LAPTOP-FEL3RH8E",[[1,146,"——"]],[146,146],[148,148]]],[1626664184554,["lixia@LAPTOP-FEL3RH8E",[[-1,146,"——"]],[148,148],[146,146]]],[1626664185224,["lixia@LAPTOP-FEL3RH8E",[[1,146,"_"]],[146,146],[147,147]]],[1626664187256,["lixia@LAPTOP-FEL3RH8E",[[-1,152,"_"]],[153,153],[152,152]]],[1626664187596,["lixia@LAPTOP-FEL3RH8E",[[1,152,"__"]],[152,152],[153,153]]],[1626664194829,["lixia@LAPTOP-FEL3RH8E",[[-1,146,"_<"],[1,148," "]],[146,148],[147,147]]],[1626664196932,["lixia@LAPTOP-FEL3RH8E",[[1,147,"_"]],[147,147],[148,148]]],[1626664200114,["lixia@LAPTOP-FEL3RH8E",[[-1,153,"_"]],[153,153],[152,152]]],[1626664200500,["lixia@LAPTOP-FEL3RH8E",[[1,152," "]],[152,152],[153,153]]],[1626664206813,["lixia@LAPTOP-FEL3RH8E",[[-1,151,"> "]],[153,153],[151,151]]],[1626664212166,["lixia@LAPTOP-FEL3RH8E",[[-1,146," "]],[147,147],[146,146]]],[1626664216042,["lixia@LAPTOP-FEL3RH8E",[[-1,146,"_随机码_"],[1,151,"——"]],[146,146],[148,148]]],[1626664217057,["lixia@LAPTOP-FEL3RH8E",[[-1,146,"——"]],[148,148],[146,146]]],[1626664217678,["lixia@LAPTOP-FEL3RH8E",[[1,146,"__"]],[146,146],[147,147]]],[1626664221579,["lixia@LAPTOP-FEL3RH8E",[[-1,145,">_"]],[147,147],[145,145]]],[1626664224170,["lixia@LAPTOP-FEL3RH8E",[[-1,139,"<"]],[140,140],[139,139]]],[1626664227671,["lixia@LAPTOP-FEL3RH8E",[[1,139,"_"],[1,144,"_"]],[139,144],[139,146]]],[1626666346734,["lixia@LAPTOP-FEL3RH8E",[[-1,139,"_"]],[140,140],[139,139]]],[1626666347685,["lixia@LAPTOP-FEL3RH8E",[[1,139,"<"]],[139,139],[140,140]]],[1626666350926,["lixia@LAPTOP-FEL3RH8E",[[-1,145,"__"]],[147,147],[145,145]]],[1626666351637,["lixia@LAPTOP-FEL3RH8E",[[1,145,"》"]],[145,145],[146,146]]],[1626666352551,["lixia@LAPTOP-FEL3RH8E",[[-1,145,"》"]],[146,146],[145,145]]],[1626666354817,["lixia@LAPTOP-FEL3RH8E",[[1,145,">__"]],[145,145],[147,147]]],[1626666356576,["lixia@LAPTOP-FEL3RH8E",[[-1,147,"_"]],[147,147],[147,147]]],[1626674922214,["lixia@LAPTOP-FEL3RH8E",[[-1,132,"<p>"]],[135,135],[132,132]]],[1626674924113,["lixia@LAPTOP-FEL3RH8E",[[-1,156,"</p>"]],[160,160],[156,156]]]],null,"lixia@LAPTOP-FEL3RH8E"],["a1e08a2f-e1f2-43ee-9419-da5b260f187c",1626920394191,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。在配置Sonar检查任务时，您可以关联已有的代码检查任务，也可以新建任务。选择新建任务时，步骤执行后，系统会在“代码检查”中自动新建一个任务。名称为“<流水线名称>_自动生成的代码检查任务”。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy、PHP等。Cloud Native的Sonar代码检查当前只支持java、JavaScrip、PHP三种语言。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“代码检查 > Sonar检查”步骤。\n2. 配置Sonar步骤。          \n     设置步骤名称、任务类型和编程语言，然后设置质量门禁：            \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。含义为：Sonar代码检查出的对应问题级别的问题数小于等于门禁时，Sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。          \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1626920383182,["lixia@LAPTOP-FEL3RH8E",[[1,619,"\\"]],[619,619],[620,620]]],[1626920383249,["lixia@LAPTOP-FEL3RH8E",[[-1,619,"\\"],[1,620,"、"]],[620,620],[620,620]]],[1626920388618,["lixia@LAPTOP-FEL3RH8E",[[1,620,"C、HTML\\"]],[620,620],[627,627]]],[1626920388685,["lixia@LAPTOP-FEL3RH8E",[[-1,626,"\\"],[1,627,"、"]],[627,627],[627,627]]],[1626920390397,["lixia@LAPTOP-FEL3RH8E",[[1,627,"CSS"]],[627,627],[630,630]]],[1626920393126,["lixia@LAPTOP-FEL3RH8E",[[-1,630,"三种"]],[630,630],[630,630]]]],null,"lixia@LAPTOP-FEL3RH8E"],["da86104e-e306-417f-b1c6-312d9cd8c861",1639102879912,"---\nenable html: true\n---\n# Sonar检查\n\n“代码检查”服务中的检查任务也是Sonar检查。在配置Sonar检查任务时，您可以关联已有的代码检查任务，也可以新建任务。选择新建任务时，步骤执行后，系统会在“代码检查”中自动新建一个任务。名称为“<流水线名称>_自动生成的代码检查任务”。\n\n### 背景信息\nSonar是一个代码质量管理的平台，支持七个维度的代码静态检查：\n\n|检查维度|说明 |\n| :--------- | :-------- |\n|代码规范 |通过PMD、CheckStyle、Findbugs等代码规则检测工具检查代码规范。|\n|潜在的缺陷|通过PMD、CheckStyle、Findbugs等代码规则检测工具检测出潜在的缺陷。|\n|复杂度|检测文件、类、方法等的复杂度。|\n|重复|检测重复的代码。|\n|注释不足或者过多|没有注释将使代码可读性变差。而过多的注释又会使得开发人员将精力过多地花费在阅读注释上，亦违背初衷。|\n|单元测试覆盖率|统计并展示单元测试覆盖率。|\n|糟糕的设计 |检测循环、包与包、类与类之间的相互依赖关系，管理第三方的jar包，检测耦合等。|\n\nSonar支持的语言包括java、C#、C/C++、PL/SQL、Cobol、JavaScrip、Groovy、PHP等。Cloud Native的Sonar代码检查当前只支持java、JavaScrip、PHP、C、HTML、CSS语言。\n\n### 操作步骤\n1. 在流水线任务编辑界面中，添加“代码检查 > Sonar检查”步骤。\n2. 配置Sonar步骤。          \n     设置步骤名称、任务类型和编程语言，然后设置质量门禁：            \n     将需要判断的问题级别开关置为ON（蓝色），然后设置门禁。含义为：Sonar代码检查出的对应问题级别的问题数小于等于门禁时，Sonar检查通过；否则不通过。设置多个级别的门禁时，需同时满足条件，检查方能通过。          \n     <img src=\"fig/流水线-sonar.png\" style=\"zoom:50%\">\n\n\n",[[1639102878907,["lixia@LAPTOP-FEL3RH8E",[[-1,574,"Cloud Native"],[1,586,"系统"]],[574,574],[576,576]]]],null,"lixia@LAPTOP-FEL3RH8E"]]}