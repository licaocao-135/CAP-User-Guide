{"compress":true,"commitItems":[["b1127c14-cde1-4a29-9780-a77031660345",1618992217637,"---\nenable html: true\n---\n# Lorem ipsum\n\nLorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed.\n",[[1618992214369,["lixia@LAPTOP-FEL3RH8E",[[-1,28,"Lorem ipsum"],[1,39,"q"]],[28,39],[28,29]]],[1618992215072,["lixia@LAPTOP-FEL3RH8E",[[-1,28,"q"],[1,29,"迁移"]],[28,28],[30,30]]],[1618992216986,["lixia@LAPTOP-FEL3RH8E",[[1,30,"已有代码"]],[30,30],[34,34]]],[1618992220432,["lixia@LAPTOP-FEL3RH8E",[[-1,36,"Lorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed."]],[36,942],[36,36]]],[1618992954276,["lixia@LAPTOP-FEL3RH8E",[[-1,36,"\n"],[1,37,"#"]],[36,36],[37,37]]],[1618992957166,["lixia@LAPTOP-FEL3RH8E",[[1,37,"## 操作步骤"]],[37,37],[44,44]]],[1618992957405,["lixia@LAPTOP-FEL3RH8E",[[1,44,"\n\n"]],[44,44],[45,45]]],[1618993012003,["lixia@LAPTOP-FEL3RH8E",[[1,36,"\n"]],[34,34],[35,35]]],[1618993012216,["lixia@LAPTOP-FEL3RH8E",[[1,37,"\n"]],[35,35],[36,36]]],[1618993023406,["lixia@LAPTOP-FEL3RH8E",[[-1,42,"操作步骤"],[1,46,"t"]],[42,46],[42,43]]],[1618993024359,["lixia@LAPTOP-FEL3RH8E",[[-1,42,"t"],[1,43,"通过"]],[42,42],[44,44]]],[1618993043270,["lixia@LAPTOP-FEL3RH8E",[[1,44,"Git Bash/Linux Git/mac Git客户端迁移代码"]],[42,44],[77,77]]],[1618993045133,["lixia@LAPTOP-FEL3RH8E",[[1,79,"\n"]],[77,77],[78,78]]],[1618993045599,["lixia@LAPTOP-FEL3RH8E",[[1,80,"\n"]],[78,78],[79,79]]],[1618993054193,["lixia@LAPTOP-FEL3RH8E",[[1,79,"1. 克隆代码库。\n  1. 在代码库详情页面，单击右上方的“克隆”。\n  2. 在地址对话框中，单击“复制”，复制访问方式中的HTTPS链接。\n     \n     Cloud Native当前只支持HTTPS协议。\n     \n  3. 打开Git Bash客户端，进入本地的相应目录下，执行以下命令，将代码库克隆下来。\n```\n    $ git clone <HTTPS克隆链接>\n```\n    \n    <img src=\"fig/git-clone-00.png\" style=\"zoom:50%\">\n\n  4. （可选）如果您是第一次使用git克隆仓库，则需要验证认证信息。\n    \n    在弹出的用户名、密码对话框中，输入已加入代码库“维护人员”或“开发人员”的账号、密码，单击“确定”。\n> [!NOTE]\n> 客户端在使用**git clone**命令克隆代码仓库时失败，请检查账号密码是否有误。\n     \n     <img src=\"fig/git-clone-01.png\" style=\"zoom:50%\">\n \n2. 新建分支。\n     \n     进入到代码库目录，执行以下命令行创建一个新的分支，并将当前分支切换到新建分支。例如，新建并切换到“feature01”分支。\n```\n    $ git checkout -b <分支名称>\n```\n    <img src=\"fig/git-clone-02.png\" style=\"zoom:50%\">\n\n3. 在分支中编写代码。\n     \n     编写代码可以在新文件中编写，也可以修改原文件编写。以下以在新文件中编写为例。\n     \n     如果您使用Window操作系统，也可以直接在代码库目录中创建文件夹和文件，并编辑文件。\n     \n     以下以通过命令新建文件夹和文件为例进行介绍。\n```\n    # 查看当前目录的内容\n    $ ls\n    # 新建文件夹，例如“newfolder”\n    $ mkdir newfolder\n    # 进入目录，例如，进入“newfolder”目录\n    $ cd newfolder\n    # 新建名为“test.txt”的文件\n    $ touch test.txt\n    # 新建并打开名为“test.txt”的文件\n    $ vi test.txt\n    # 按下键盘的“i”键，进入文件编辑模式\n    # 在文件中编写内容\n    # 编写完成后，按下键盘的“Esc”键，并输入“:wq!”，回车，保存并关闭文件\n```\n\n4. 提交文件到本地仓库。\n  1. 返回到本地代码库目录，并将修改内容提交到本地仓库暂存区。\n```\n    # 返回上级目录\n    $ cd ..\n    # (本命令与下一条命令任选一个方式）提交本目录下的所有修改到暂存区\n    $ git add .\n    # 提交本目录下的某个文件到暂存区，例如提交“test.txt”文件\n    $ git add test.txt\n```\n> [!NOTE]\n> **git status**命令可以查询当前本地仓库的状态。您可以在需要的时候执行命令查看，后续不再赘述。\n\n  2. 将暂存区的内容commit到本地仓库。\n```\n    $ git commit -m \"<本次commit的备注信息>\"\n```\n<img src=\"fig/git-clone-03.png\" style=\"zoom:50%\">\n\n5. 推送文件到远端仓的当前分支。\n```\n    $ git push origin <当前分支名称>\n```\n    \n    <img src=\"fig/git-clone-04.png\" style=\"zoom:50%\">\n\n6. 合并分支。\n    \n    以下以当前分支为“feature01”分支，目标分支为“master”分支为例。\n    \n  1. 将当前分支切换到目标分支，\n```\n    $ git checkout master\n```\n  2. 将目标分支的内容更新到最新版本。\n```\n    $ git pull\n```\n  3. 将“feature01”分支中的内容合并到“master”分支中。\n```\n    $ git merge feature01\n```\n  4. 将“master”分支中更新的内容提交到远端仓库。\n```\n    # 提交本目录下的所有修改到暂存区\n    $ git add .\n    # 将本地仓库的内容推送到远端仓库\n    $ git push origin master\n```\n      \n      <img src=\"fig/git-clone-05.png\" style=\"zoom:50%\">\n\n本地修改的内容已推送到远端仓库，并合并到主干中。您可以打开Cloud Native的代码库查看。\n"]],[79,79],[2167,2167]]],[1618993060946,["lixia@LAPTOP-FEL3RH8E",[[1,79,"\n"]],[77,77],[78,78]]],[1618993067714,["lixia@LAPTOP-FEL3RH8E",[[1,78,"Windows Git Bash客户端、Linux Git客户端和mac Git客户端在开发并比较代码过程中的命令基本一致。以下以Windows Git Bash客户端为例进行介绍。"]],[78,78],[169,169]]],[1618993082101,["lixia@LAPTOP-FEL3RH8E",[[-1,649,"新建分支。\n     \n     进入到代码库目录，执行以下命令行创建一个新的分支，并将当前分支切换到新建分支。例如，新建并切换到“feature01”分支。\n```\n    $ git checkout -b <分支名称>\n```\n    <img src=\"fig/git-clone-02.png\" style=\"zoom:50%\">\n\n3. 在分支中编写代码。\n     \n     编写代码可以在新文件中编写，也可以修改原文件编写。以下以在新文件中编写为例。\n     \n     如果您使用Window操作系统，也可以直接在代码库目录中创建文件夹和文件，并编辑文件。\n     \n     以下以通过命令新建文件夹和文件为例进行介绍。\n```\n    # 查看当前目录的内容\n    $ ls\n    # 新建文件夹，例如“newfolder”\n    $ mkdir newfolder\n    # 进入目录，例如，进入“newfolder”目录\n    $ cd newfolder\n    # 新建名为“test.txt”的文件\n    $ touch test.txt\n    # 新建并打开名为“test.txt”的文件\n    $ vi test.txt\n    # 按下键盘的“i”键，进入文件编辑模式\n    # 在文件中编写内容\n    # 编写完成后，按下键盘的“Esc”键，并输入“:wq!”，回车，保存并关闭文件\n```\n"],[1,1278,"j"]],[649,1277],[649,650]]],[1618993082774,["lixia@LAPTOP-FEL3RH8E",[[-1,649,"j"],[1,650,"将"]],[649,649],[650,650]]],[1618993114606,["lixia@LAPTOP-FEL3RH8E",[[1,650,"原代码库中的内容全部拷贝到本地代码库目录中。"]],[650,650],[672,672]]],[1618993151285,["lixia@LAPTOP-FEL3RH8E",[[-1,692,"返回到"],[1,695,"进入"]],[692,692],[694,694]]],[1618993154175,["lixia@LAPTOP-FEL3RH8E",[[-1,724,"    # 返回上级目录\n    $ cd .."]],[724,748],[724,724]]],[1618993154673,["lixia@LAPTOP-FEL3RH8E",[[-1,724,"\n"]],[724,724],[723,723]]],[1618993158622,["lixia@LAPTOP-FEL3RH8E",[[-1,704,"修改内容"],[1,708,"d"]],[704,708],[704,705]]],[1618993159286,["lixia@LAPTOP-FEL3RH8E",[[-1,704,"d"],[1,705,"代码"]],[704,704],[706,706]]],[1618993169743,["lixia@LAPTOP-FEL3RH8E",[[-1,777,"    # 提交本目录下的某个文件到暂存区，例如提交“test.txt”文件\n    $ git add test.txt"]],[781,838],[777,777]]],[1618993169902,["lixia@LAPTOP-FEL3RH8E",[[-1,777,"\n"]],[777,777],[776,776]]],[1618993174762,["lixia@LAPTOP-FEL3RH8E",[[-1,728,"(本命令与下一条命令任选一个方式）"]],[728,745],[728,728]]],[1618993185144,["lixia@LAPTOP-FEL3RH8E",[[-1,673,"4"],[1,674,"3"]],[673,673],[674,674]]],[1618993192622,["lixia@LAPTOP-FEL3RH8E",[[-1,953,"5"],[1,954,"4"]],[953,954],[954,954]]],[1618993196016,["lixia@LAPTOP-FEL3RH8E",[[1,964,"库"]],[964,964],[965,965]]],[1618993222467,["lixia@LAPTOP-FEL3RH8E",[[-1,1071,"6. 合并分支。\n    \n    以下以当前分支为“feature01”分支，目标分支为“master”分支为例。\n    \n  1. 将当前分支切换到目标分支，\n```\n    $ git checkout master\n```\n  2. 将目标分支的内容更新到最新版本。\n```\n    $ git pull\n```\n  3. 将“feature01”分支中的内容合并到“master”分支中。\n```\n    $ git merge feature01\n```\n  4. 将“master”分支中更新的内容提交到远端仓库。\n```\n    # 提交本目录下的所有修改到暂存区\n    $ git add .\n    # 将本地仓库的内容推送到远端仓库\n    $ git push origin master\n```\n      \n      <img src=\"fig/git-clone-05.png\" style=\"zoom:50%\">\n"]],[1071,1497],[1071,1071]]],[1618993223330,["lixia@LAPTOP-FEL3RH8E",[[-1,1071,"\n"]],[1071,1071],[1070,1070]]],[1618993261845,["lixia@LAPTOP-FEL3RH8E",[[-1,1071,"本地修改"]],[1073,1075],[1071,1071]]],[1618993263514,["lixia@LAPTOP-FEL3RH8E",[[1,1071,"代码库"]],[1071,1071],[1074,1074]]],[1618993266668,["lixia@LAPTOP-FEL3RH8E",[[1,1071,"本地"]],[1071,1071],[1073,1073]]],[1618993271912,["lixia@LAPTOP-FEL3RH8E",[[-1,1087,"，并合并到主干中"]],[1087,1095],[1087,1087]]],[1618993298587,["lixia@LAPTOP-FEL3RH8E",[[-1,37,"\n"]],[36,36],[36,36]]],[1618993299633,["lixia@LAPTOP-FEL3RH8E",[[-1,36,"\n"]],[36,36],[36,36]]],[1618993317297,["lixia@LAPTOP-FEL3RH8E",[[-1,900,"<img src=\"fig/git-clone-03.png\" style=\"zoom:50%\">"]],[900,949],[900,900]]],[1618993317699,["lixia@LAPTOP-FEL3RH8E",[[-1,901,"\n"]],[900,900],[900,900]]],[1618993319270,["lixia@LAPTOP-FEL3RH8E",[[-1,966,"  <img src=\"fig/git-clone-04.png\" style=\"zoom:50%\">"]],[966,1017],[966,966]]],[1618993319630,["lixia@LAPTOP-FEL3RH8E",[[-1,967,"\n"]],[966,966],[966,966]]],[1618993320077,["lixia@LAPTOP-FEL3RH8E",[[-1,966,"\n"]],[966,966],[966,966]]],[1618993322427,["lixia@LAPTOP-FEL3RH8E",[[-1,964,"  "]],[966,966],[964,964]]],[1618993329459,["lixia@LAPTOP-FEL3RH8E",[[1,1008,"\n"]],[1006,1006],[1007,1007]]],[1618993329619,["lixia@LAPTOP-FEL3RH8E",[[1,1009,"\n"]],[1007,1007],[1008,1008]]],[1618993343285,["lixia@LAPTOP-FEL3RH8E",[[1,1008,"### 通过TortoiseGit客户端迁移代码"]],[1008,1008],[1032,1032]]],[1618993354776,["lixia@LAPTOP-FEL3RH8E",[[1,1034,"\n"]],[1032,1032],[1033,1033]]],[1618993354942,["lixia@LAPTOP-FEL3RH8E",[[1,1035,"\n"]],[1033,1033],[1034,1034]]],[1618993355340,["lixia@LAPTOP-FEL3RH8E",[[1,1034,"1. 克隆仓库。\n  1. 在代码库详情页面，单击右上方的“克隆”。\n  2. 在地址对话框中，单击“复制”，复制访问方式中的HTTPS链接。\n     \n     Cloud Native当前只支持HTTPS协议。\n     \n     <img src=\"fig/代码库-复制地址.png\" style=\"zoom:50%\">\n     \n  3. 打开TortoiseGit客户端，进入相应目录下，单击鼠标右键，选择“Git克隆”。\n  4. 在弹出的窗口中，将复制的HTTPS地址粘贴到URL输入框中，然后单击“确定”。\n      \n      <img src=\"fig/t-git-clone-01.png\" style=\"zoom:50%\">\n      \n      如果您是第一次克隆，TortoiseGit客户端会弹出对话框，要求输入用户名和密码。\n      \n      <img src=\"fig/代码-tortoisegit-认证.png\" style=\"zoom:50%\">\n      \n  5. 在用户名密码对话框中，输入代码库“维护人员”或“开发人员”角色的账号和密码，单击“确定”。\n    \n    如果界面提示“成功”，表示仓库克隆成功。\n    \n2. 新建分支。\n     \n  1. 右键单击本地仓库名称，选择“TortoiseGit > 创建分支”。\n   <img src=\"fig/t-git-分支-01.png\" style=\"zoom:50%\">\n   \n  2. 在对话框中输入分支名称、分支基线，单击“确定”。\n     \n     如果需要将当前分支切换到新建的分支，在上面的对话框中勾选“切换到新分支”。\n     \n     <img src=\"fig/tortoisegit-新建分支.png\" style=\"zoom:50%\">\n     \n3. 在分支中编写代码。\n     \n     编写代码可以在新文件中编写，也可以修改原文件编写。以下以在新文件中编写为例。\n     \n     进入仓库目录，新建一个“newFile.txt”文件，并在里面书写一行文字。\n     \n     <img src=\"fig/tortoisegit-新建文件.png\" style=\"zoom:50%\">\n     \n4. 提交文件到本地仓库。\n  1. 在本地仓库目录下，右键单击空白处，选择“Git（提交） > _分支名称_”。\n      \n      <img src=\"fig/tortoisegit-提交.png\" style=\"zoom:50%\">\n       \n  2. 在对话框中，填写本次提交的日志信息、勾选“设置作者”、在变更的文件列表中选择要进行提交的文件，单击“提交”。\n       \n       <img src=\"fig/tortoisegit-提交02.png\" style=\"zoom:50%\">\n       \n5. 推送文件到远端仓库。\n     \n 1. 在仓库目录下，右键单击空白处，选择“TortoiseGit > 推送”。\n     \n     <img src=\"fig/t-git-推送.png\" style=\"zoom:50%\">\n     \n 2. 在弹出的窗口中去掉“自动加载Putty密钥”的勾选，然后单击“确定”。\n      \n      <img src=\"fig/tortoisegit-推送.png\" style=\"zoom:50%\">\n      \n6. 合并分支。\n     \n     以下以将“develop”分支的内容合并到“master”分支为例。\n     \n  1. 将分支切换到目标分支，即“master”分支。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 切换/检出”。然后在对话框中，选择“切换到 > 分支”为”master“。\n    \n    <img src=\"fig/t-git-合并-01.png\" style=\"zoom:50%\">\n          \n  2. 将目标分支的内容更新到最新版本。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 拉取”。然后在对话框中，去勾选“自动加载Putty密钥”，单击“确定”。\n    \n    <img src=\"fig/t-git-合并-02.png\" style=\"zoom:50%\">\n         \n  3. 将“develop”分支合并到“master”分支。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 合并”。然后在对话框中，设置“从 > 分支”为需要合并的分支，即“develop”分支。\n    \n    <img src=\"fig/t-git-合并-03.png\" style=\"zoom:50%\">\n         \n  4. 将“master”分支的内容推送到远端仓库。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 推送”。然后在对话框中，设置推送的分支，去勾选“自动加载Putty密钥”，单击“确定”。\n    \n    <img src=\"fig/t-git-合并-04.png\" style=\"zoom:50%\">\n         \n本地修改的内容已推送到远端仓库，并合并到主干中。您可以打开Cloud Native的代码库查看。"]],[1034,1034],[3356,3356]]],[1618993398498,["lixia@LAPTOP-FEL3RH8E",[[-1,1584,"新建分支。\n     \n  1. 右键单击本地仓库名称，选择“TortoiseGit > 创建分支”。\n   <img src=\"fig/t-git-分支-01.png\" style=\"zoom:50%\">\n   \n  2. 在对话框中输入分支名称、分支基线，单击“确定”。\n     \n     如果需要将当前分支切换到新建的分支，在上面的对话框中勾选“切换到新分支”。\n     \n     <img src=\"fig/tortoisegit-新建分支.png\" style=\"zoom:50%\">\n     \n3. 在分支中编写代码。\n     \n     编写代码可以在新文件中编写，也可以修改原文件编写。以下以在新文件中编写为例。\n     \n     "]],[1584,1916],[1584,1584]]],[1618993400520,["lixia@LAPTOP-FEL3RH8E",[[1,1591,"将原代码库中的内容全部拷贝到本地代码库目录中。"]],[1591,1591],[1614,1614]]],[1618993405369,["lixia@LAPTOP-FEL3RH8E",[[-1,1584,"进入仓库目录，"]],[1584,1591],[1584,1584]]],[1618993408787,["lixia@LAPTOP-FEL3RH8E",[[-1,1607,"新建一个“newFile.txt”文件，并在里面书写一行文字。\n     \n     <img src=\"fig/tortoisegit-新建文件.png\" style=\"zoom:50%\">"]],[1607,1703],[1607,1607]]],[1618993412169,["lixia@LAPTOP-FEL3RH8E",[[-1,1614,"4"],[1,1615,"3"]],[1614,1615],[1615,1615]]],[1618993421012,["lixia@LAPTOP-FEL3RH8E",[[-1,1882,"5"],[1,1883,"4"]],[1882,1882],[1883,1883]]],[1618993461362,["lixia@LAPTOP-FEL3RH8E",[[-1,1679,"      <img src=\"fig/tortoisegit-提交.png\" style=\"zoom:50%\">"]],[1685,1736],[1679,1679]]],[1618993461625,["lixia@LAPTOP-FEL3RH8E",[[-1,1679,"\n"]],[1679,1679],[1678,1678]]],[1618993464272,["lixia@LAPTOP-FEL3RH8E",[[-1,1681,"     \n  "]],[1678,1686],[1678,1678]]],[1618993467370,["lixia@LAPTOP-FEL3RH8E",[[-1,1747,"       <img src=\"fig/tortoisegit-提交02.png\" style=\"zoom:50%\">"]],[1753,1807],[1747,1747]]],[1618993467531,["lixia@LAPTOP-FEL3RH8E",[[-1,1747,"\n"]],[1747,1747],[1746,1746]]],[1618993469060,["lixia@LAPTOP-FEL3RH8E",[[-1,1739,"       "]],[1746,1746],[1739,1739]]],[1618993469281,["lixia@LAPTOP-FEL3RH8E",[[-1,1739,"\n"]],[1739,1739],[1738,1738]]],[1618993485063,["lixia@LAPTOP-FEL3RH8E",[[-1,1814,"     <img src=\"fig/t-git-推送.png\" style=\"zoom:50%\">"]],[1816,1864],[1814,1814]]],[1618993485274,["lixia@LAPTOP-FEL3RH8E",[[-1,1814,"\n"]],[1814,1814],[1813,1813]]],[1618993486370,["lixia@LAPTOP-FEL3RH8E",[[-1,1808,"     "]],[1813,1813],[1808,1808]]],[1618993486574,["lixia@LAPTOP-FEL3RH8E",[[-1,1808,"\n"]],[1808,1808],[1807,1807]]],[1618993488901,["lixia@LAPTOP-FEL3RH8E",[[-1,1861,"      <img src=\"fig/tortoisegit-推送.png\" style=\"zoom:50%\">"]],[1862,1918],[1861,1861]]],[1618993489070,["lixia@LAPTOP-FEL3RH8E",[[-1,1861,"\n"]],[1861,1861],[1860,1860]]],[1618993490265,["lixia@LAPTOP-FEL3RH8E",[[-1,1854,"      "]],[1860,1860],[1854,1854]]],[1618993490687,["lixia@LAPTOP-FEL3RH8E",[[-1,1854,"\n"]],[1854,1854],[1853,1853]]],[1618993497414,["lixia@LAPTOP-FEL3RH8E",[[-1,1861,"6. 合并分支。\n     \n     以下以将“develop”分支的内容合并到“master”分支为例。\n     \n  1. 将分支切换到目标分支，即“master”分支。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 切换/检出”。然后在对话框中，选择“切换到 > 分支”为”master“。\n    \n    <img src=\"fig/t-git-合并-01.png\" style=\"zoom:50%\">\n          \n  2. 将目标分支的内容更新到最新版本。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 拉取”。然后在对话框中，去勾选“自动加载Putty密钥”，单击“确定”。\n    \n    <img src=\"fig/t-git-合并-02.png\" style=\"zoom:50%\">\n         \n  3. 将“develop”分支合并到“master”分支。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 合并”。然后在对话框中，设置“从 > 分支”为需要合并的分支，即“develop”分支。\n    \n    <img src=\"fig/t-git-合并-03.png\" style=\"zoom:50%\">\n         \n  4. 将“master”分支的内容推送到远端仓库。\n    \n    在本地仓库目录的空白处单击右键，选择“Tortoisegit > 推送”。然后在对话框中，设置推送的分支，去勾选“自动加载Putty密钥”，单击“确定”。\n    \n    <img src=\"fig/t-git-合并-04.png\" style=\"zoom:50%\">\n         "]],[1861,2638],[1861,1861]]],[1618993499545,["lixia@LAPTOP-FEL3RH8E",[[-1,1861,"\n"]],[1861,1861],[1860,1860]]],[1618993508059,["lixia@LAPTOP-FEL3RH8E",[[-1,1863,"修改"],[1,1865,"代码库"],[-1,1876,"，并合并到主干中"]],[1861,1885],[1878,1878]]],[1618993509329,["lixia@LAPTOP-FEL3RH8E",[[1,1904,"\n"]],[1902,1902],[1903,1903]]],[1618993509515,["lixia@LAPTOP-FEL3RH8E",[[1,1905,"\n"]],[1903,1903],[1904,1904]]],[1618993509687,["lixia@LAPTOP-FEL3RH8E",[[1,1906,"\n"]],[1904,1904],[1905,1905]]],[1618993512184,["lixia@LAPTOP-FEL3RH8E",[[1,1905,"### "]],[1905,1905],[1909,1909]]],[1618993528747,["lixia@LAPTOP-FEL3RH8E",[[1,1909,"通过TortoiseSVN客户端迁移代码吗"]],[1909,1909],[1930,1930]]],[1618993529608,["lixia@LAPTOP-FEL3RH8E",[[-1,1929,"吗"]],[1930,1930],[1929,1929]]],[1618993539155,["lixia@LAPTOP-FEL3RH8E",[[1,1931,"\n"]],[1929,1929],[1930,1930]]],[1618993539665,["lixia@LAPTOP-FEL3RH8E",[[1,1930,"1. 克隆仓库。\n  1. 在代码库列表中，单击SVN类型的代码仓库，进入代码仓库详情界面。\n  2. 单击“代码”页签，然后在右上角单击“克隆”。\n  3. 在按钮下方显示的对话框中，单击“复制”，复制仓库地址。\n      \n      <img src=\"fig/代码库-复制地址.png\" style=\"zoom:50%\">\n\n  4. 进入本地存放代码仓库的目录，右键单击空白处，选择“SVN检出”。\n        \n        <img src=\"fig/SVN检出.png\" style=\"zoom:50%\">\n        \n  5. 在“检出”对话框中，将刚刚复制的代码仓库地址粘贴到“版本库URL”中，其它参数保持默认值，单击“确定”。\n       \n       <img src=\"fig/SVN检出界面.png\" style=\"zoom:50%\">\n       \n  6. 在弹出的“认证”对话框中，输入具有该仓库操作权限的Cloud Native账号和密码，单击“确定”。\n     \n       <img src=\"fig/代码库-SVN-认证.png\" style=\"zoom:50%\">\n       \n      仓库成功克隆到本地后，目录中显示名称为仓库名称的文件夹。\n      \n2. 新建分支。\n  1. 右键单击“trunk”，选择“TortoiseSVN > 分支/标记”。\n       \n       <img src=\"fig/svn-分支-01.png\" style=\"zoom:50%\">\n       \n  2. 在创建分支对话框中，设置分支路径和复制的版本，单击“确定”。\n      \n      所有的分支一般放到与“trunk”平级的文件夹“branches”中管理。\n         \n         <img src=\"fig/svn-分支-02.png\" style=\"zoom:50%\">\n         \n  3. 在复制对话框中，待复制完成后，单击“确定”。\n         \n         新建的分支直接创建到远端仓库，您可以在远端仓库中查看。\n         \n  4. 在本地代码库目录的空白处单击右键，选择“SVN更新”，将新建的分支检出到本地。\n      \n3. 在分支中编写代码。\n     \n     在本地编写文件并保存。\n     \n4. 将本地修改提交到远端仓库。\n  1. 在修改所在的文件夹中，单击右键，选择“SVN提交”。\n    \n    <img src=\"fig/svn-提交.png\" style=\"zoom:50%\">\n    \n  2. 在提交对话框中，输入提交说明，勾选需要提交的文件，单击“确定”。\n      \n      <img src=\"fig/svn-提交-02.png\" style=\"zoom:50%\">\n      \n  3. 在提交完成的提示框中，单击“确定”。\n\n5. 将分支的内容合并到主干。\n  1. 将主干更新到最新版本。\n         \n         在本地仓库目录中，右键单击“trunk”，选择“SVN 更新”。\n         \n  2. 右键单击“trunk”，选择“TortoiseSVN > 合并”。\n  3. 在合并对话框中，选择“合并类型”为“合并一个版本范围”，单击“下一步”。\n      \n      <img src=\"fig/svn-合并01.png\" style=\"zoom:50%\">\n      \n  4. 选择要合并的分支和合并的范围，单击“下一步”。\n     \n     <img src=\"fig/svn-合并-02.png\" style=\"zoom:50%\">\n     \n  5. 设置合并的相关参数，单击“合并”。\n        \n        为确保合并成功，您可以先单击“测试合并”，测试是否能合并成功。如果测试不成功，可以根据界面提示解决问题。\n        \n  6. 将合并入主干的内容，提交到远端仓库。\n        \n        在本地仓库目录中，右键单击“trunk”，选择“SVN 提交”。"]],[1930,1930],[3708,3708]]],[1618993568486,["lixia@LAPTOP-FEL3RH8E",[[-1,2501,"新建分支。\n  1. 右键单击“trunk”，选择“TortoiseSVN > 分支/标记”。\n       \n       <img src=\"fig/svn-分支-01.png\" style=\"zoom:50%\">\n       \n  2. 在创建分支对话框中，设置分支路径和复制的版本，单击“确定”。\n      \n      所有的分支一般放到与“trunk”平级的文件夹“branches”中管理。\n         \n         <img src=\"fig/svn-分支-02.png\" style=\"zoom:50%\">\n         \n  3. 在复制对话框中，待复制完成后，单击“确定”。\n         \n         新建的分支直接创建到远端仓库，您可以在远端仓库中查看。\n         \n  4. 在"],[1,2873,"将原代码库中的内容全部拷贝到"],[-1,2880,"的空白处单击右键，选择“SVN更新”，将新建的分支检出到本地。\n      \n3. 在分支"],[-1,2926,"编写代码。\n     \n     在本地编写文件并保存"]],[2501,2954],[2524,2524]]],[1618993573251,["lixia@LAPTOP-FEL3RH8E",[[-1,2531,"4"],[1,2532,"3"]],[2531,2532],[2532,2532]]],[1618993595019,["lixia@LAPTOP-FEL3RH8E",[[-1,2585,"    <img src=\"fig/svn-提交.png\" style=\"zoom:50%\">"]],[2585,2632],[2585,2585]]],[1618993595282,["lixia@LAPTOP-FEL3RH8E",[[-1,2585,"\n"]],[2585,2585],[2584,2584]]],[1618993596784,["lixia@LAPTOP-FEL3RH8E",[[-1,2580,"    "]],[2584,2584],[2580,2580]]],[1618993597341,["lixia@LAPTOP-FEL3RH8E",[[-1,2580,"\n"]],[2580,2580],[2579,2579]]],[1618993600302,["lixia@LAPTOP-FEL3RH8E",[[-1,2630,"      <img src=\"fig/svn-提交-02.png\" style=\"zoom:50%\">"]],[2632,2682],[2630,2630]]],[1618993600470,["lixia@LAPTOP-FEL3RH8E",[[-1,2630,"\n"]],[2630,2630],[2629,2629]]],[1618993601709,["lixia@LAPTOP-FEL3RH8E",[[-1,2623,"      "]],[2629,2629],[2623,2623]]],[1618993601881,["lixia@LAPTOP-FEL3RH8E",[[-1,2623,"\n"]],[2623,2623],[2622,2622]]],[1618993602294,["lixia@LAPTOP-FEL3RH8E",[[-1,2621,"。"]],[2622,2622],[2621,2621]]],[1618993616124,["lixia@LAPTOP-FEL3RH8E",[[-1,2654,"5. 将分支的内容合并到主干。\n  1. 将主干更新到最新版本。\n         \n         在本地仓库目录中，右键单击“trunk”，选择“SVN 更新”。\n         \n  2. 右键单击“trunk”，选择“TortoiseSVN > 合并”。\n  3. 在合并对话框中，选择“合并类型”为“合并一个版本范围”，单击“下一步”。\n      \n      <img src=\"fig/svn-合并01.png\" style=\"zoom:50%\">\n      \n  4. 选择要合并的分支和合并的范围，单击“下一步”。\n     \n     <img src=\"fig/svn-合并-02.png\" style=\"zoom:50%\">\n     \n  5. 设置合并的相关参数，单击“合并”。\n        \n        为确保合并成功，您可以先单击“测试合并”，测试是否能合并成功。如果测试不成功，可以根据界面提示解决问题。"]],[2654,3081],[2654,2654]]],[1618993619976,["lixia@LAPTOP-FEL3RH8E",[[-1,2653,"\n\n        \n  6"]],[2653,2667],[2653,2653]]],[1618993620200,["lixia@LAPTOP-FEL3RH8E",[[-1,2652,"\n"]],[2653,2653],[2652,2652]]],[1618993621944,["lixia@LAPTOP-FEL3RH8E",[[1,2652,"\n"]],[2652,2652],[2653,2653]]],[1618993622848,["lixia@LAPTOP-FEL3RH8E",[[1,2653,"\n\n        \n  6"]],[2653,2653],[2653,2667]]],[1618993625254,["lixia@LAPTOP-FEL3RH8E",[[-1,2657,"      \n  "]],[2654,2663],[2654,2654]]],[1618993625585,["lixia@LAPTOP-FEL3RH8E",[[-1,2654,"\n"]],[2654,2654],[2653,2653]]],[1618993643072,["lixia@LAPTOP-FEL3RH8E",[[-1,2535,"本地修改"]],[2539,2539],[2535,2535]]],[1618993644809,["lixia@LAPTOP-FEL3RH8E",[[1,2535,"本地内容"]],[2535,2535],[2539,2539]]],[1618993654830,["lixia@LAPTOP-FEL3RH8E",[[-1,2654,"  6. 将合并入主干的内容，提交到远端仓库。\n        \n        在本地仓库目录中，右键单击“trunk”，选择“SVN 提交”。\n"]],[2654,2728],[2654,2654]]],[1618993655402,["lixia@LAPTOP-FEL3RH8E",[[-1,2654,"\n"]],[2654,2654],[2653,2653]]],[1618993677203,["lixia@LAPTOP-FEL3RH8E",[[1,2653,"本地代码库的内容已推送到远端仓库。您可以打开Cloud Native的代码库查看。\n"]],[2653,2653],[2695,2695]]],[1618993678591,["lixia@LAPTOP-FEL3RH8E",[[1,2653,"\n"]],[2653,2653],[2654,2654]]]],null,"lixia@LAPTOP-FEL3RH8E"]]}