{"compress":true,"commitItems":[["0b5f0b19-e680-473f-a736-c69f1fdd8a2f",1612766473673,"---\nenable html: true\n---\n# Lorem ipsum\n\nLorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed.\n",[[1612766461240,["lixia@LAPTOP-FEL3RH8E",[[-1,28,"Lorem ipsum"],[1,39,"1"]],[28,28],[29,29]]],[1612766461882,["lixia@LAPTOP-FEL3RH8E",[[1,29,"0."]],[29,29],[31,31]]],[1612766462635,["lixia@LAPTOP-FEL3RH8E",[[-1,28,"10."]],[31,31],[28,28]]],[1612766467121,["lixia@LAPTOP-FEL3RH8E",[[1,28,"K8s管理概述"]],[28,28],[35,35]]],[1612766469756,["lixia@LAPTOP-FEL3RH8E",[[-1,37,"Lorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed."]],[37,943],[37,37]]],[1612766471068,["lixia@LAPTOP-FEL3RH8E",[[1,37,"### 应用部署的历史阶段\n应用的部署经历了以下几个阶段：\n* **传统部署**\n    传统的应用部署通过插件或脚本将应用部署在物理服务器上。因此，应用的运行、配置、管理、生命周期等将与当前服务器绑定，不利于应用的升级、更新、回滚等，同时也存在应用建资源分配不合理的问题。\n* **虚拟化部署**\n    虚拟化技术允许在单个物理服务器的CPU上运行多个虚拟机（virtual machine，VM），同时，VM之间支持隔离。虚拟化技术能够更好地利用物理服务器上的资源，实现了可伸缩性，降低了硬件成本。但是VM非常重，不利于可移植性。\n* **容器化部署**\n   容器化部署的每个应用被打包成一个容器镜像，每个应用与容器间成一对一关系。每个容器之间互相隔离，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。相对于虚拟机，容器能快速部署。同时，由于容器与基础设施、机器文件系统解耦，所以它能在不同云、不同版本操作系统间进行迁移。\n\n### K8s的特点\n容器是打包和运行应用程序的方式。K8s提供了一个可弹性运行容器化应用的框架，满足应用的扩展要求、故障转移、部署模式等。K8s具备如下特点：\n* 可移植: 支持公有云、私有云、混合云、多重云\n* 可扩展: 模块化、插件化、可挂载、可组合\n* 自动化: 自动部署、自动重启、自动复制、自动伸缩/扩展\n\n### K8s的架构\n"]],[37,37],[636,636]]],[1612838402599,["lixia@LAPTOP-FEL3RH8E",[[-1,636,"\n"],[1,637,"K"]],[636,636],[637,637]]],[1612838409953,["lixia@LAPTOP-FEL3RH8E",[[1,637,"8s的架构如下图所示。"]],[637,637],[648,648]]],[1612838410275,["lixia@LAPTOP-FEL3RH8E",[[1,648,"\n\n"]],[648,648],[649,649]]],[1612838443306,["lixia@LAPTOP-FEL3RH8E",[[1,649,"      <img src=\"fig/tortoisegit-提交.png\" style=\"zoom:50%\">"]],[649,649],[706,706]]],[1612838448296,["lixia@LAPTOP-FEL3RH8E",[[-1,669,"tortoisegit-提交"],[1,683,"k"]],[669,683],[670,670]]],[1612838451795,["lixia@LAPTOP-FEL3RH8E",[[1,670,"8s架构"]],[670,670],[674,674]]],[1612838455280,["lixia@LAPTOP-FEL3RH8E",[[1,698,"      \n"]],[697,697],[704,704]]],[1612838455506,["lixia@LAPTOP-FEL3RH8E",[[-1,698,"      "],[1,704,"\n"]],[704,704],[699,699]]],[1612838457420,["lixia@LAPTOP-FEL3RH8E",[[-1,699,"\n"],[1,700,"其中"]],[699,699],[701,701]]],[1612838457664,["lixia@LAPTOP-FEL3RH8E",[[1,701,"："]],[701,701],[702,702]]],[1612838458002,["lixia@LAPTOP-FEL3RH8E",[[1,702,"\n\n"]],[702,702],[703,703]]],[1612838470854,["lixia@LAPTOP-FEL3RH8E",[[1,637,"K"]],[636,636],[637,637]]],[1612838500205,["lixia@LAPTOP-FEL3RH8E",[[1,637,"8s集群由Master节点和多个Node（Worker）节点组成，"]],[637,637],[670,670]]],[1612838502720,["lixia@LAPTOP-FEL3RH8E",[[-1,670,"K8s的"]],[670,670],[670,670]]],[1612838504105,["lixia@LAPTOP-FEL3RH8E",[[1,670,"其"]],[670,670],[671,671]]],[1612838511158,["lixia@LAPTOP-FEL3RH8E",[[-1,734,"\n"],[1,735,"*"]],[734,734],[735,735]]],[1612838512058,["lixia@LAPTOP-FEL3RH8E",[[1,735," M"]],[735,735],[737,737]]],[1612838512623,["lixia@LAPTOP-FEL3RH8E",[[-1,736,"M"]],[737,737],[736,736]]],[1612838513239,["lixia@LAPTOP-FEL3RH8E",[[1,736,"*"]],[736,736],[737,737]]],[1612838514260,["lixia@LAPTOP-FEL3RH8E",[[1,737,"***"]],[737,737],[738,738]]],[1612838518699,["lixia@LAPTOP-FEL3RH8E",[[1,738,"Master节点"]],[738,738],[746,746]]],[1612838520077,["lixia@LAPTOP-FEL3RH8E",[[1,748,"\n* "]],[748,748],[751,751]]],[1612838521849,["lixia@LAPTOP-FEL3RH8E",[[-1,750," "]],[751,751],[750,750]]],[1612838522025,["lixia@LAPTOP-FEL3RH8E",[[-1,749,"*"],[1,750,"\n"]],[750,750],[749,749]]],[1612838522379,["lixia@LAPTOP-FEL3RH8E",[[-1,749,"\n"],[1,750," "]],[749,749],[750,750]]],[1612838530400,["lixia@LAPTOP-FEL3RH8E",[[1,750,"    Master节点指的是集群控制节点，管理和控制整个集群，基本上k8s的所有控制命令都发给它，它负责具体的执行过程。"]],[750,750],[811,811]]],[1612838535305,["lixia@LAPTOP-FEL3RH8E",[[-1,762,"指的"]],[762,764],[762,762]]],[1612838538105,["lixia@LAPTOP-FEL3RH8E",[[1,765,"上午"]],[765,765],[767,767]]],[1612838542311,["lixia@LAPTOP-FEL3RH8E",[[-1,781,"，"],[1,782,"。"]],[781,781],[782,782]]],[1612838565219,["lixia@LAPTOP-FEL3RH8E",[[1,785,"，"]],[785,785],[786,786]]],[1612838568345,["lixia@LAPTOP-FEL3RH8E",[[-1,786,"k"],[1,787,"K"]],[786,787],[787,787]]],[1612838573017,["lixia@LAPTOP-FEL3RH8E",[[-1,799,"它"]],[799,799],[799,799]]],[1612838573596,["lixia@LAPTOP-FEL3RH8E",[[1,799,"M"]],[799,799],[800,800]]],[1612838581754,["lixia@LAPTOP-FEL3RH8E",[[1,800,"aster节点"]],[800,800],[807,807]]],[1612838588947,["lixia@LAPTOP-FEL3RH8E",[[-1,807,"，它负责具体的执行过程"]],[807,818],[807,807]]],[1612838617724,["lixia@LAPTOP-FEL3RH8E",[[1,808,"Master节点上运行者："]],[808,808],[821,821]]],[1612838618359,["lixia@LAPTOP-FEL3RH8E",[[-1,819,"者："]],[821,821],[819,819]]],[1612838623791,["lixia@LAPTOP-FEL3RH8E",[[1,819,"着：\n     1.  Kubernetes Controller Manager（kube-controller-manager）：k8s中所有资源对象的自动化控制中心，维护管理集群的状态，比如故障检测，自动扩展，滚动更新等。\n2.  Kubernetes Scheduler（kube-scheduler）： 负责资源调度，按照预定的调度策略将Pod调度到相应的机器上。\n3.  etcd：保存整个集群的状态。"]],[819,819],[1026,1026]]],[1612838630839,["lixia@LAPTOP-FEL3RH8E",[[-1,823,"    1.  "],[1,831,"*"]],[823,823],[824,824]]],[1612838631595,["lixia@LAPTOP-FEL3RH8E",[[1,824," "]],[824,824],[825,825]]],[1612838647973,["lixia@LAPTOP-FEL3RH8E",[[-1,825,"Kubernetes "]],[825,836],[825,825]]],[1612838657285,["lixia@LAPTOP-FEL3RH8E",[[-1,835," M"],[1,837,"-"]],[835,837],[836,836]]],[1612838658499,["lixia@LAPTOP-FEL3RH8E",[[1,836,"m"]],[836,836],[837,837]]],[1612838662287,["lixia@LAPTOP-FEL3RH8E",[[-1,843,"（kube-controller-manager）"]],[843,868],[843,843]]],[1612838671295,["lixia@LAPTOP-FEL3RH8E",[[-1,892,"2.  "]],[892,896],[892,892]]],[1612838671962,["lixia@LAPTOP-FEL3RH8E",[[-1,891,"\n"]],[892,892],[891,891]]],[1612838674296,["lixia@LAPTOP-FEL3RH8E",[[1,891,"\n * "]],[891,891],[895,895]]],[1612838682576,["lixia@LAPTOP-FEL3RH8E",[[-1,895,"Kubernetes "]],[895,906],[895,895]]],[1612838685629,["lixia@LAPTOP-FEL3RH8E",[[-1,904,"（kube-scheduler）"]],[904,920],[904,904]]],[1612838697769,["lixia@LAPTOP-FEL3RH8E",[[-1,937,"3. "]],[937,940],[937,937]]],[1612838698074,["lixia@LAPTOP-FEL3RH8E",[[-1,936,"\n"]],[937,937],[936,936]]],[1612838700377,["lixia@LAPTOP-FEL3RH8E",[[1,936,"\n *"]],[936,936],[939,939]]],[1612838715673,["lixia@LAPTOP-FEL3RH8E",[[1,825,"\n * "]],[825,825],[829,829]]],[1612838725677,["lixia@LAPTOP-FEL3RH8E",[[1,825,"API server：XXXX"]],[825,825],[840,840]]],[1612838731618,["lixia@LAPTOP-FEL3RH8E",[[1,974,"\n * "]],[974,974],[978,978]]],[1612838732299,["lixia@LAPTOP-FEL3RH8E",[[-1,976,"* "]],[978,978],[976,976]]],[1612838732600,["lixia@LAPTOP-FEL3RH8E",[[-1,975," "],[1,976,"\n"]],[976,976],[975,975]]],[1612838732943,["lixia@LAPTOP-FEL3RH8E",[[-1,975,"\n"]],[975,975],[974,974]]],[1612838733137,["lixia@LAPTOP-FEL3RH8E",[[-1,973,"。"]],[974,974],[973,973]]],[1612838734672,["lixia@LAPTOP-FEL3RH8E",[[1,973,"。"]],[973,973],[974,974]]],[1612838735609,["lixia@LAPTOP-FEL3RH8E",[[1,975," * \n"]],[974,974],[978,978]]],[1612838737024,["lixia@LAPTOP-FEL3RH8E",[[-1,975," * "]],[978,978],[975,975]]],[1612838737299,["lixia@LAPTOP-FEL3RH8E",[[-1,975,"\n"]],[975,975],[974,974]]],[1612838738582,["lixia@LAPTOP-FEL3RH8E",[[1,975," * \n"]],[974,974],[978,978]]],[1612838739061,["lixia@LAPTOP-FEL3RH8E",[[-1,978,"\n"]],[978,978],[978,978]]],[1612838741139,["lixia@LAPTOP-FEL3RH8E",[[-1,976,"* "]],[978,978],[976,976]]],[1612838741780,["lixia@LAPTOP-FEL3RH8E",[[-1,975," "],[1,976,"\n"]],[976,976],[975,975]]],[1612838742037,["lixia@LAPTOP-FEL3RH8E",[[-1,975,"\n"]],[975,975],[974,974]]],[1612838743238,["lixia@LAPTOP-FEL3RH8E",[[1,974,"\\"]],[974,974],[975,975]]],[1612838743274,["lixia@LAPTOP-FEL3RH8E",[[-1,974,"\\"],[1,975,"、"]],[975,975],[975,975]]],[1612838744412,["lixia@LAPTOP-FEL3RH8E",[[-1,975,"\n"]],[975,975],[975,975]]],[1612838744687,["lixia@LAPTOP-FEL3RH8E",[[1,975,"\\"]],[975,975],[976,976]]],[1612838744721,["lixia@LAPTOP-FEL3RH8E",[[-1,975,"\\"],[1,976,"、"]],[976,976],[976,976]]],[1612838746089,["lixia@LAPTOP-FEL3RH8E",[[-1,974,"、、"]],[976,976],[974,974]]],[1612838746513,["lixia@LAPTOP-FEL3RH8E",[[1,974,"\n * "]],[974,974],[978,978]]],[1612838748047,["lixia@LAPTOP-FEL3RH8E",[[-1,976,"* "]],[978,978],[976,976]]],[1612838748668,["lixia@LAPTOP-FEL3RH8E",[[-1,975," "],[1,976,"\n"]],[976,976],[975,975]]],[1612838757791,["lixia@LAPTOP-FEL3RH8E",[[1,823," "]],[823,823],[824,824]]],[1612838758556,["lixia@LAPTOP-FEL3RH8E",[[1,843," "]],[843,843],[844,844]]],[1612838759845,["lixia@LAPTOP-FEL3RH8E",[[1,914," "]],[914,914],[915,915]]],[1612838760859,["lixia@LAPTOP-FEL3RH8E",[[1,960," "]],[960,960],[961,961]]],[1612838762690,["lixia@LAPTOP-FEL3RH8E",[[-1,979,"\n"],[1,980,"*"]],[979,979],[980,980]]],[1612838764118,["lixia@LAPTOP-FEL3RH8E",[[1,980," ****"]],[980,980],[983,983]]],[1612838779188,["lixia@LAPTOP-FEL3RH8E",[[1,983,"Node节点"]],[983,983],[989,989]]],[1612838782094,["lixia@LAPTOP-FEL3RH8E",[[1,991,"\n* "]],[991,991],[994,994]]],[1612838784178,["lixia@LAPTOP-FEL3RH8E",[[-1,993," "]],[994,994],[993,993]]],[1612838784351,["lixia@LAPTOP-FEL3RH8E",[[-1,992,"*"],[1,993,"\n"]],[993,993],[992,992]]],[1612838784852,["lixia@LAPTOP-FEL3RH8E",[[-1,992,"\n"],[1,993," "]],[992,992],[993,993]]],[1612838785539,["lixia@LAPTOP-FEL3RH8E",[[1,993,"   "]],[993,993],[996,996]]],[1612838800596,["lixia@LAPTOP-FEL3RH8E",[[1,996,"除了master以外的节点被称为Node或者Worker节点，可以在master中使用命令 `kubectl get nodes`查看集群中的node节点。每个Node都会被Master分配一些工作负载（Docker容器），当某个Node宕机时，该节点上的工作负载就会被Master自动转移到其它节点上。在Node上主要运行着：\n\n1.  kubelet：负责Pod对应的容器的创建、启停等任务，同时与Master密切协作，实现集群管理的基本功能\n2.  kube-proxy：实现service的通信与负载均衡\n3.  docker（Docker Engine）：Docker引擎，负责本机的容器创建和管理"]],[996,996],[1300,1300]]],[1612838814438,["lixia@LAPTOP-FEL3RH8E",[[-1,1026,"，"],[1,1027,"。"],[-1,1041," "],[1,1042," "]],[1026,1027],[1027,1027]]],[1612838835622,["lixia@LAPTOP-FEL3RH8E",[[1,1027,"您"]],[1027,1027],[1028,1028]]],[1612838839773,["lixia@LAPTOP-FEL3RH8E",[[1,1037,"系欸但"]],[1037,1037],[1040,1040]]],[1612838840591,["lixia@LAPTOP-FEL3RH8E",[[-1,1037,"系欸但"]],[1040,1040],[1037,1037]]],[1612838844795,["lixia@LAPTOP-FEL3RH8E",[[1,1037,"节点"]],[1037,1037],[1039,1039]]],[1612838845706,["lixia@LAPTOP-FEL3RH8E",[[1,1040,"中"]],[1039,1039],[1040,1040]]],[1612838846081,["lixia@LAPTOP-FEL3RH8E",[[-1,1040,"中"]],[1040,1040],[1039,1039]]],[1612838854760,["lixia@LAPTOP-FEL3RH8E",[[1,1064,"，"]],[1064,1064],[1065,1065]]],[1612838858759,["lixia@LAPTOP-FEL3RH8E",[[-1,1071,"n"],[1,1072,"N"]],[1071,1072],[1072,1072]]],[1612838868737,["lixia@LAPTOP-FEL3RH8E",[[-1,1111,"，"],[1,1112,"."]],[1111,1112],[1112,1112]]],[1612838872586,["lixia@LAPTOP-FEL3RH8E",[[-1,1119,"宕机"]],[1121,1121],[1119,1119]]],[1612838873165,["lixia@LAPTOP-FEL3RH8E",[[1,1119,"GU"]],[1119,1119],[1121,1121]]],[1612838873956,["lixia@LAPTOP-FEL3RH8E",[[-1,1119,"GU"]],[1121,1121],[1119,1119]]],[1612838879187,["lixia@LAPTOP-FEL3RH8E",[[1,1119,"故障"]],[1119,1119],[1121,1121]]],[1612838888809,["lixia@LAPTOP-FEL3RH8E",[[-1,1152,"在"]],[1153,1153],[1152,1152]]],[1612838891498,["lixia@LAPTOP-FEL3RH8E",[[1,1156,"节点"]],[1156,1156],[1158,1158]]],[1612838894958,["lixia@LAPTOP-FEL3RH8E",[[1,817,"主要"]],[817,817],[819,819]]],[1612838897645,["lixia@LAPTOP-FEL3RH8E",[[-1,1168,"\n"]],[1167,1167],[1167,1167]]],[1612838900798,["lixia@LAPTOP-FEL3RH8E",[[-1,1168,"1. "]],[1168,1172],[1169,1169]]],[1612838901966,["lixia@LAPTOP-FEL3RH8E",[[1,1169," * "]],[1169,1169],[1172,1172]]],[1612838911500,["lixia@LAPTOP-FEL3RH8E",[[1,1225,"。"]],[1225,1225],[1226,1226]]],[1612838916587,["lixia@LAPTOP-FEL3RH8E",[[-1,1199,"，"],[1,1200,"。"]],[1199,1199],[1200,1200]]],[1612838918840,["lixia@LAPTOP-FEL3RH8E",[[1,1202,"，"]],[1202,1202],[1203,1203]]],[1612838922444,["lixia@LAPTOP-FEL3RH8E",[[-1,1228,"2. "]],[1228,1232],[1229,1229]]],[1612838923316,["lixia@LAPTOP-FEL3RH8E",[[1,1229," * "]],[1229,1229],[1232,1232]]],[1612838927018,["lixia@LAPTOP-FEL3RH8E",[[-1,1232,"kube-p"],[1,1238,"P"]],[1232,1238],[1233,1233]]],[1612838932153,["lixia@LAPTOP-FEL3RH8E",[[1,1255,"。"]],[1255,1255],[1256,1256]]],[1612838941200,["lixia@LAPTOP-FEL3RH8E",[[-1,1257,"3.  "]],[1257,1261],[1257,1257]]],[1612838941419,["lixia@LAPTOP-FEL3RH8E",[[-1,1256,"\n"]],[1257,1257],[1256,1256]]],[1612838944687,["lixia@LAPTOP-FEL3RH8E",[[1,1256,"\n  * "]],[1256,1256],[1261,1261]]],[1612838946223,["lixia@LAPTOP-FEL3RH8E",[[-1,1261,"d"]],[1261,1261],[1261,1261]]],[1612838946503,["lixia@LAPTOP-FEL3RH8E",[[1,1261,"D"]],[1261,1261],[1262,1262]]],[1612838950277,["lixia@LAPTOP-FEL3RH8E",[[-1,1267,"（Docker Engine）"]],[1267,1282],[1267,1267]]],[1612838952298,["lixia@LAPTOP-FEL3RH8E",[[1,1289,"。"]],[1289,1289],[1290,1290]]],[1612838962285,["lixia@LAPTOP-FEL3RH8E",[[1,1290,"\n  * "]],[1290,1290],[1295,1295]]],[1612838990695,["lixia@LAPTOP-FEL3RH8E",[[1,1293,"  "]],[1292,1292],[1294,1294]]],[1612838998366,["lixia@LAPTOP-FEL3RH8E",[[1,1297,"Pod：XXXX\\"]],[1297,1297],[1306,1306]]],[1612838998405,["lixia@LAPTOP-FEL3RH8E",[[-1,1305,"\\"],[1,1306,"、"]],[1306,1306],[1306,1306]]],[1612838999095,["lixia@LAPTOP-FEL3RH8E",[[-1,1305,"、"]],[1306,1306],[1305,1305]]],[1612839005303,["lixia@LAPTOP-FEL3RH8E",[[1,1305,"\n    * C"]],[1305,1305],[1313,1313]]],[1612839006234,["lixia@LAPTOP-FEL3RH8E",[[-1,1312,"C"]],[1313,1313],[1312,1312]]],[1612839013114,["lixia@LAPTOP-FEL3RH8E",[[1,1312,"cAdvisor：\n    * "]],[1312,1312],[1328,1328]]],[1612839018345,["lixia@LAPTOP-FEL3RH8E",[[1,1328,"container："]],[1328,1328],[1338,1338]]],[1612839945419,["lixia@LAPTOP-FEL3RH8E",[[-1,839,"XXXX"],[1,843,"API Server主要用来处理REST的操作"]],[839,843],[862,862]]],[1612839950435,["lixia@LAPTOP-FEL3RH8E",[[-1,839,"API Server主要用来"]],[839,853],[839,839]]],[1612839951641,["lixia@LAPTOP-FEL3RH8E",[[1,848,"，"]],[848,848],[849,849]]],[1612840038038,["lixia@LAPTOP-FEL3RH8E",[[1,849,"并作为K8S"]],[849,849],[855,855]]],[1612840038731,["lixia@LAPTOP-FEL3RH8E",[[-1,854,"S"]],[855,855],[854,854]]],[1612840043358,["lixia@LAPTOP-FEL3RH8E",[[1,854,"s集群的访问网关。"]],[854,854],[863,863]]],[1612840104446,["lixia@LAPTOP-FEL3RH8E",[[1,734,"\n"]],[733,733],[734,734]]],[1612840106714,["lixia@LAPTOP-FEL3RH8E",[[1,734,"* ****"]],[734,734],[738,738]]],[1612840110761,["lixia@LAPTOP-FEL3RH8E",[[1,738,"kubectl"]],[738,738],[745,745]]],[1612840112416,["lixia@LAPTOP-FEL3RH8E",[[1,750,"\n* "]],[747,747],[750,750]]],[1612840113120,["lixia@LAPTOP-FEL3RH8E",[[-1,748,"* "]],[750,750],[748,748]]],[1612840114858,["lixia@LAPTOP-FEL3RH8E",[[1,748,"    集群的命令行接口"]],[748,748],[760,760]]],[1612840118912,["lixia@LAPTOP-FEL3RH8E",[[1,752,"K8s的"]],[752,752],[756,756]]],[1612840119784,["lixia@LAPTOP-FEL3RH8E",[[-1,755,"的"]],[756,756],[755,755]]],[1612840121416,["lixia@LAPTOP-FEL3RH8E",[[1,763,"。"]],[763,763],[764,764]]],[1612840235169,["lixia@LAPTOP-FEL3RH8E",[[-1,796,"上午"]],[798,798],[796,796]]],[1612840261031,["lixia@LAPTOP-FEL3RH8E",[[1,803,"、调度"]],[803,803],[806,806]]],[1612840274405,["lixia@LAPTOP-FEL3RH8E",[[-1,814,"基本上，K8s的所有控制命令都发给Master节点。"]],[814,840],[814,814]]],[1612840277217,["lixia@LAPTOP-FEL3RH8E",[[-1,822,"上"]],[823,823],[822,822]]],[1612840286662,["lixia@LAPTOP-FEL3RH8E",[[1,824,"由以下组件"]],[824,824],[829,829]]],[1612840288659,["lixia@LAPTOP-FEL3RH8E",[[-1,827,"组件"]],[829,829],[827,827]]],[1612840292295,["lixia@LAPTOP-FEL3RH8E",[[1,827,"模块组成"]],[827,827],[831,831]]],[1612840293335,["lixia@LAPTOP-FEL3RH8E",[[-1,831,"运行着"]],[831,831],[831,831]]],[1612840346610,["lixia@LAPTOP-FEL3RH8E",[[1,1027,"Node节点是工作节点，运行业务应用的容器。"]],[1027,1027],[1049,1049]]],[1612840349996,["lixia@LAPTOP-FEL3RH8E",[[-1,1049,"除了master以外的节点被称为Node或者Worker节点。"]],[1049,1080],[1049,1049]]],[1612840360155,["lixia@LAPTOP-FEL3RH8E",[[-1,1100,"每个Node都会被Master分配一些工作负载（Docker容器）.当某个Node故障时，该节点上的工作负载就会被Master自动转移到其它节点上。"]],[1100,1174],[1100,1100]]],[1612840365342,["lixia@LAPTOP-FEL3RH8E",[[-1,1106,"上"]],[1106,1107],[1106,1106]]],[1612840368825,["lixia@LAPTOP-FEL3RH8E",[[-1,1108,"运行着"],[1,1111,"y"]],[1108,1111],[1108,1109]]],[1612840369665,["lixia@LAPTOP-FEL3RH8E",[[-1,1108,"y"],[1,1109,"由"]],[1108,1108],[1109,1109]]],[1612840373283,["lixia@LAPTOP-FEL3RH8E",[[1,1109,"以下模块组成"]],[1109,1109],[1115,1115]]],[1612840608801,["lixia@LAPTOP-FEL3RH8E",[[-1,1240,"    * Pod：XXXX"],[-1,1255,"    * cAdvisor：\n    * container："]],[1240,1287],[1240,1240]]],[1612840609541,["lixia@LAPTOP-FEL3RH8E",[[-1,1240,"\n"]],[1240,1240],[1239,1239]]],[1612840614993,["lixia@LAPTOP-FEL3RH8E",[[1,37,"\n"]],[35,35],[36,36]]],[1612840620966,["lixia@LAPTOP-FEL3RH8E",[[-1,31,"管理"]],[33,33],[31,31]]],[1612840811668,["lixia@LAPTOP-FEL3RH8E",[[-1,847,"处理REST的"],[1,854,"提供了资源"],[1,856,"的唯一入口"],[-1,858,"作为K8s集群的访问网关"],[1,870,"提供认证、授权、访问控制、API注册和发现等机制；"]],[847,870],[886,886]]],[1612840817951,["lixia@LAPTOP-FEL3RH8E",[[-1,885,"；"]],[886,886],[885,885]]],[1612841001559,["lixia@LAPTOP-FEL3RH8E",[[1,35,"K8s是kubernetes的缩写。K8s用于管理云平台中多个主机上的容器化应用，为容器化应用的部署、规划、更新、维护提供了一种更简单高效的机制。\n"]],[35,35],[109,109]]]],null,"lixia@LAPTOP-FEL3RH8E"],["916ba82d-c6f7-44fc-afd3-a8cf4cb6a5b7",1612852689942,"---\nenable html: true\n---\n# K8s概述\n\nK8s是kubernetes的缩写。K8s用于管理云平台中多个主机上的容器化应用，为容器化应用的部署、规划、更新、维护提供了一种更简单高效的机制。\n\n### 应用部署的历史阶段\n应用的部署经历了以下几个阶段：\n* **传统部署**\n    传统的应用部署通过插件或脚本将应用部署在物理服务器上。因此，应用的运行、配置、管理、生命周期等将与当前服务器绑定，不利于应用的升级、更新、回滚等，同时也存在应用建资源分配不合理的问题。\n* **虚拟化部署**\n    虚拟化技术允许在单个物理服务器的CPU上运行多个虚拟机（virtual machine，VM），同时，VM之间支持隔离。虚拟化技术能够更好地利用物理服务器上的资源，实现了可伸缩性，降低了硬件成本。但是VM非常重，不利于可移植性。\n* **容器化部署**\n   容器化部署的每个应用被打包成一个容器镜像，每个应用与容器间成一对一关系。每个容器之间互相隔离，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。相对于虚拟机，容器能快速部署。同时，由于容器与基础设施、机器文件系统解耦，所以它能在不同云、不同版本操作系统间进行迁移。\n\n### K8s的特点\n容器是打包和运行应用程序的方式。K8s提供了一个可弹性运行容器化应用的框架，满足应用的扩展要求、故障转移、部署模式等。K8s具备如下特点：\n* 可移植: 支持公有云、私有云、混合云、多重云\n* 可扩展: 模块化、插件化、可挂载、可组合\n* 自动化: 自动部署、自动重启、自动复制、自动伸缩/扩展\n\n### K8s的架构\nK8s集群由Master节点和多个Node（Worker）节点组成，其架构如下图所示。\n      <img src=\"fig/k8s架构.png\" style=\"zoom:50%\">\n\n其中：\n* **kubectl**\n    K8s集群的命令行接口。\n* **Master节点**\n     Master节点是集群控制节点，管理、调度和控制整个集群。Master节点主要由以下模块组成：\n  * API server：提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制。\n  * Controller-manager：k8s中所有资源对象的自动化控制中心，维护管理集群的状态，比如故障检测，自动扩展，滚动更新等。\n  * Scheduler： 负责资源调度，按照预定的调度策略将Pod调度到相应的机器上。\n  * etcd：保存整个集群的状态。\n* **Node节点**\n    Node节点是工作节点，运行业务应用的容器。您可以在master节点中使用命令 `kubectl get nodes`，查看集群中的Node节点。Node节点主要由以下模块组成：\n  * kubelet：负责Pod对应的容器的创建、启停等任务。同时，与Master密切协作，实现集群管理的基本功能。\n  * Proxy：实现service的通信与负载均衡。\n  * Docker：Docker引擎，负责本机的容器创建和管理。\n",[[1612852659027,["lixia@LAPTOP-FEL3RH8E",[[1,155,"\n    "]],[155,155],[160,160]]],[1612852660660,["lixia@LAPTOP-FEL3RH8E",[[1,269,"\n    "]],[269,269],[274,274]]],[1612852662946,["lixia@LAPTOP-FEL3RH8E",[[1,404,"\n   "]],[404,404],[408,408]]],[1612852667107,["lixia@LAPTOP-FEL3RH8E",[[1,839,"\n    "]],[839,839],[844,844]]],[1612852669887,["lixia@LAPTOP-FEL3RH8E",[[1,877,"\n     "]],[877,877],[883,883]]],[1612852673266,["lixia@LAPTOP-FEL3RH8E",[[1,1140,"\n    "]],[1140,1140],[1145,1145]]],[1612852677437,["lixia@LAPTOP-FEL3RH8E",[[-1,1184," `"],[1,1186,"*"]],[1184,1186],[1185,1185]]],[1612852677630,["lixia@LAPTOP-FEL3RH8E",[[1,1185,"***"]],[1185,1185],[1186,1186]]],[1612852679881,["lixia@LAPTOP-FEL3RH8E",[[-1,1187,"*"]],[1186,1186],[1186,1186]]],[1612852681087,["lixia@LAPTOP-FEL3RH8E",[[-1,1186,"*"]],[1186,1186],[1186,1186]]],[1612852683807,["lixia@LAPTOP-FEL3RH8E",[[-1,1203,"`"],[1,1204,"*"]],[1203,1204],[1204,1204]]],[1612852683985,["lixia@LAPTOP-FEL3RH8E",[[1,1204,"***"]],[1204,1204],[1205,1205]]],[1612852686113,["lixia@LAPTOP-FEL3RH8E",[[-1,1206,"*"]],[1205,1205],[1205,1205]]],[1612852686354,["lixia@LAPTOP-FEL3RH8E",[[-1,1205,"*"]],[1205,1205],[1205,1205]]]],null,"lixia@LAPTOP-FEL3RH8E"],["9fdafc3c-02ae-4468-a884-50cc7af43cef",1619317207709,"---\nenable html: true\n---\n# K8s概述\n\nK8s是kubernetes的缩写。K8s用于管理云平台中多个主机上的容器化应用，为容器化应用的部署、规划、更新、维护提供了一种更简单高效的机制。\n\n### 应用部署的历史阶段\n应用的部署经历了以下几个阶段：\n* **传统部署**\n    \n    传统的应用部署通过插件或脚本将应用部署在物理服务器上。因此，应用的运行、配置、管理、生命周期等将与当前服务器绑定，不利于应用的升级、更新、回滚等，同时也存在应用建资源分配不合理的问题。\n* **虚拟化部署**\n    \n    虚拟化技术允许在单个物理服务器的CPU上运行多个虚拟机（virtual machine，VM），同时，VM之间支持隔离。虚拟化技术能够更好地利用物理服务器上的资源，实现了可伸缩性，降低了硬件成本。但是VM非常重，不利于可移植性。\n* **容器化部署**\n   \n   容器化部署的每个应用被打包成一个容器镜像，每个应用与容器间成一对一关系。每个容器之间互相隔离，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。相对于虚拟机，容器能快速部署。同时，由于容器与基础设施、机器文件系统解耦，所以它能在不同云、不同版本操作系统间进行迁移。\n\n### K8s的特点\n容器是打包和运行应用程序的方式。K8s提供了一个可弹性运行容器化应用的框架，满足应用的扩展要求、故障转移、部署模式等。K8s具备如下特点：\n* 可移植: 支持公有云、私有云、混合云、多重云\n* 可扩展: 模块化、插件化、可挂载、可组合\n* 自动化: 自动部署、自动重启、自动复制、自动伸缩/扩展\n\n### K8s的架构\nK8s集群由Master节点和多个Node（Worker）节点组成，其架构如下图所示。\n      <img src=\"fig/k8s架构.png\" style=\"zoom:50%\">\n\n其中：\n* **kubectl**\n    \n    K8s集群的命令行接口。\n* **Master节点**\n     \n     Master节点是集群控制节点，管理、调度和控制整个集群。Master节点主要由以下模块组成：\n  * API server：提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制。\n  * Controller-manager：k8s中所有资源对象的自动化控制中心，维护管理集群的状态，比如故障检测，自动扩展，滚动更新等。\n  * Scheduler： 负责资源调度，按照预定的调度策略将Pod调度到相应的机器上。\n  * etcd：保存整个集群的状态。\n* **Node节点**\n    \n    Node节点是工作节点，运行业务应用的容器。您可以在master节点中使用命令**kubectl get nodes**，查看集群中的Node节点。Node节点主要由以下模块组成：\n  * kubelet：负责Pod对应的容器的创建、启停等任务。同时，与Master密切协作，实现集群管理的基本功能。\n  * Proxy：实现service的通信与负载均衡。\n  * Docker：Docker引擎，负责本机的容器创建和管理。\n",[[1619317206127,["lixia@LAPTOP-FEL3RH8E",[[-1,240,"建"]],[241,241],[240,240]]],[1619317207147,["lixia@LAPTOP-FEL3RH8E",[[1,240,"间"]],[240,240],[241,241]]]],null,"lixia@LAPTOP-FEL3RH8E"],["35ca166d-9ddd-4cd9-ba77-ff40d67cfc5e",1619422884010,"---\nenable html: true\n---\n# K8s概述\n\nK8s是kubernetes的缩写。K8s用于管理云平台中多个主机上的容器化应用，为容器化应用的部署、规划、更新、维护提供了一种更简单高效的机制。\n\n### 应用部署的历史阶段\n应用的部署经历了以下几个阶段：\n* **传统部署**\n    \n    传统的应用部署通过插件或脚本将应用部署在物理服务器上。因此，应用的运行、配置、管理、生命周期等将与当前服务器绑定，不利于应用的升级、更新、回滚等，同时也存在应用间资源分配不合理的问题。\n* **虚拟化部署**\n    \n    虚拟化技术允许在单个物理服务器的CPU上运行多个虚拟机（virtual machine，VM），同时，VM之间支持隔离。虚拟化技术能够更好地利用物理服务器上的资源，实现了可伸缩性，降低了硬件成本。但是VM非常重，不利于可移植性。\n* **容器化部署**\n   \n   容器化部署的每个应用被打包成一个容器镜像，每个应用与容器间成一对一关系。每个容器之间互相隔离，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。相对于虚拟机，容器能快速部署。同时，由于容器与基础设施、机器文件系统解耦，所以它能在不同云、不同版本操作系统间进行迁移。\n\n### K8s的特点\n容器是打包和运行应用程序的方式。K8s提供了一个可弹性运行容器化应用的框架，满足应用的扩展要求、故障转移、部署模式等。K8s具备如下特点：\n* 可移植: 支持公有云、私有云、混合云、多重云\n* 可扩展: 模块化、插件化、可挂载、可组合\n* 自动化: 自动部署、自动重启、自动复制、自动伸缩/扩展\n\n### K8s的架构\nK8s集群由Master节点和多个Node（Worker）节点组成，其架构如下图所示。\n      <img src=\"fig/k8s架构.png\" style=\"zoom:50%\">\n\n其中：\n* **kubectl**\n    \n    K8s集群的命令行接口。\n* **Master节点**\n     \n     Master节点是集群控制节点，管理、调度和控制整个集群。Master节点主要由以下模块组成：\n  * API server：提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制。\n  * Controller-manager：k8s中所有资源对象的自动化控制中心，维护管理集群的状态，比如故障检测，自动扩展，滚动更新等。\n  * Scheduler： 负责资源调度，按照预定的调度策略将Pod调度到相应的机器上。\n  * etcd：保存整个集群的状态。\n* **Node节点**\n    \n    Node节点是工作节点，运行业务应用的容器。您可以在master节点中使用命令**kubectl get nodes**，查看集群中的Node节点。Node节点主要由以下模块组成：\n  * kubelet：负责Pod对应的容器的创建、启停等任务。同时，与Master密切协作，实现集群管理的基本功能。\n  * Proxy：实现service的通信与负载均衡。\n  * Docker：Docker引擎，负责本机的容器创建和管理。\n",[[1619422875718,["lixia@LAPTOP-FEL3RH8E",[[-1,638,": "],[1,640,"："]],[638,638],[639,639]]],[1619422877491,["lixia@LAPTOP-FEL3RH8E",[[-1,663," "]],[664,664],[663,663]]],[1619422877801,["lixia@LAPTOP-FEL3RH8E",[[1,663,"："]],[663,663],[664,664]]],[1619422879585,["lixia@LAPTOP-FEL3RH8E",[[-1,662,":"]],[663,663],[662,662]]],[1619422882547,["lixia@LAPTOP-FEL3RH8E",[[-1,684,": "]],[686,686],[684,684]]],[1619422883262,["lixia@LAPTOP-FEL3RH8E",[[1,684,"："]],[684,684],[685,685]]]],null,"lixia@LAPTOP-FEL3RH8E"],["30c2ef92-56f3-4e42-b9e4-e7ee21fa6337",1639560846818,"---\nenable html: true\n---\n# K8s概述\n\nK8s是kubernetes的缩写。K8s用于管理云平台中多个主机上的容器化应用，为容器化应用的部署、规划、更新、维护提供了一种更简单高效的机制。\n\n### 应用部署的历史阶段\n应用的部署经历了以下几个阶段：\n* **传统部署**\n    \n    传统的应用部署通过插件或脚本将应用部署在物理服务器上。因此，应用的运行、配置、管理、生命周期等将与当前服务器绑定，不利于应用的升级、更新、回滚等，同时也存在应用间资源分配不合理的问题。\n* **虚拟化部署**\n    \n    虚拟化技术允许在单个物理服务器的CPU上运行多个虚拟机（virtual machine，VM），同时，VM之间支持隔离。虚拟化技术能够更好地利用物理服务器上的资源，实现了可伸缩性，降低了硬件成本。但是VM非常重，不利于可移植性。\n* **容器化部署**\n   \n   容器化部署的每个应用被打包成一个容器镜像，每个应用与容器间成一对一关系。每个容器之间互相隔离，每个容器有自己的文件系统 ，容器之间进程不会相互影响，能区分计算资源。相对于虚拟机，容器能快速部署。同时，由于容器与基础设施、机器文件系统解耦，所以它能在不同云、不同版本操作系统间进行迁移。\n\n### K8s的特点\n容器是打包和运行应用程序的方式。K8s提供了一个可弹性运行容器化应用的框架，满足应用的扩展要求、故障转移、部署模式等。K8s具备如下特点：\n* 可移植：支持公有云、私有云、混合云、多重云\n* 可扩展：模块化、插件化、可挂载、可组合\n* 自动化：自动部署、自动重启、自动复制、自动伸缩/扩展\n\n### K8s的架构\nK8s集群由Master节点和多个Node（Worker）节点组成，其架构如下图所示。\n      <img src=\"fig/k8s架构.png\" style=\"zoom:50%\">\n\n其中：\n* **kubectl**\n    \n    K8s集群的命令行接口。\n* **Master节点**\n     \n     Master节点是集群控制节点，管理、调度和控制整个集群。Master节点主要由以下模块组成：\n  * API server：提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制。\n  * Controller-manager：k8s中所有资源对象的自动化控制中心，维护管理集群的状态，比如故障检测，自动扩展，滚动更新等。\n  * Scheduler： 负责资源调度，按照预定的调度策略将Pod调度到相应的机器上。\n  * etcd：保存整个集群的状态。\n* **Node节点**\n    \n    Node节点是工作节点，运行业务应用的容器。您可以在master节点中使用命令**kubectl get nodes**，查看集群中的Node节点。Node节点主要由以下模块组成：\n  * kubelet：负责Pod对应的容器的创建、启停等任务。同时，与Master密切协作，实现集群管理的基本功能。\n  * Proxy：实现service的通信与负载均衡。\n  * Docker：Docker引擎，负责本机的容器创建和管理。\n",[[1639560824512,["lixia@LAPTOP-FEL3RH8E",[[1,150,"            "]],[150,150],[162,162]]],[1639560824720,["lixia@LAPTOP-FEL3RH8E",[[-1,162,"\n"]],[162,162],[162,162]]],[1639560827239,["lixia@LAPTOP-FEL3RH8E",[[1,275,"                    "]],[275,275],[295,295]]],[1639560827456,["lixia@LAPTOP-FEL3RH8E",[[-1,295,"\n"]],[295,295],[295,295]]],[1639560830012,["lixia@LAPTOP-FEL3RH8E",[[1,430,"                 "]],[430,430],[447,447]]],[1639560830151,["lixia@LAPTOP-FEL3RH8E",[[-1,447,"\n"]],[447,447],[447,447]]],[1639560835544,["lixia@LAPTOP-FEL3RH8E",[[1,858,"                          "]],[858,858],[884,884]]],[1639560835739,["lixia@LAPTOP-FEL3RH8E",[[-1,885,"\n"]],[884,884],[884,884]]],[1639560838441,["lixia@LAPTOP-FEL3RH8E",[[1,902,"                 "]],[902,902],[919,919]]],[1639560838716,["lixia@LAPTOP-FEL3RH8E",[[-1,919,"\n"]],[919,919],[919,919]]],[1639560841219,["lixia@LAPTOP-FEL3RH8E",[[1,955,"                     "]],[955,955],[976,976]]],[1639560841411,["lixia@LAPTOP-FEL3RH8E",[[-1,976,"\n"]],[976,976],[976,976]]],[1639560844839,["lixia@LAPTOP-FEL3RH8E",[[1,1239,"                   "]],[1239,1239],[1258,1258]]],[1639560845031,["lixia@LAPTOP-FEL3RH8E",[[-1,1258,"\n"]],[1258,1258],[1258,1258]]]],null,"lixia@LAPTOP-FEL3RH8E"]]}