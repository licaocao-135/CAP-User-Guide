{"compress":true,"commitItems":[["1b1731b8-e4cf-4062-9c69-d1f50380c9ce",1626920983708,"---\nenable html: true\n---\n# Lorem ipsum\n\nLorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed.\n",[[1626920980023,["lixia@LAPTOP-FEL3RH8E",[[-1,28,"Lorem ipsum"]],[28,28],[28,28]]],[1626920982829,["lixia@LAPTOP-FEL3RH8E",[[1,28,"Conan构建"]],[28,28],[35,35]]],[1626920986085,["lixia@LAPTOP-FEL3RH8E",[[-1,37,"Lorem ipsum dolor sit amet, dictas cetero eam in, falli feugait ne duo. Agam causae dolorem ea sed. Eam mollis maiorum assueverit eu <span style=\"color: red;\">per stet quidam molestiae eu</span>. Omnesque inimicus accusamus id quo.\n\nTamquam facilisi ea eum, reque saepe interpretaris ex usu, nibh explicari ei qui.\n\n```javascript\nconsole.log(Array.from('foo'));\n// expected output: Array [\"f\", \"o\", \"o\"]\n\nconsole.log(Array.from([1, 2, 3], x => x + x));\n// expected output: Array [2, 4, 6]\n```\n\n## Syntax\n\n    Lorem.ipsum(epicurei[, saepe[, explicari]])\n\n**Parameters**\n\n| Senserit  | Repudiandae                         | Vis |\n| --------- | ----------------------------------- | --- |\n| epicurei  | Usu no tale prima, vis fugit  id.   | Cu  |\n| saepe     | Ea vis graecis concludaturque.      | Cum |\n| explicari | Clita quando `this` in mea `saepe`. | Cum |\n\n**Return value**\n\nEa alii putent integre sed."]],[37,943],[37,37]]],[1626925661329,["lixia@LAPTOP-FEL3RH8E",[[-1,37,"\n"],[1,38,"C"]],[37,37],[38,38]]],[1626925675990,["lixia@LAPTOP-FEL3RH8E",[[1,38,"onan是一个跨操作系统、跨编译器"]],[38,38],[55,55]]],[1626925677613,["lixia@LAPTOP-FEL3RH8E",[[-1,45,"跨操作系统、跨编译器"]],[55,55],[45,45]]],[1626925692879,["lixia@LAPTOP-FEL3RH8E",[[1,45,"支持多操作系统、多编译器、多构建工具、多"]],[45,45],[65,65]]],[1626925709514,["lixia@LAPTOP-FEL3RH8E",[[1,65,"构建方式的报"]],[65,65],[71,71]]],[1626925710134,["lixia@LAPTOP-FEL3RH8E",[[-1,70,"报"]],[71,71],[70,70]]],[1626925712522,["lixia@LAPTOP-FEL3RH8E",[[1,70,"包管理其。"]],[70,70],[75,75]]],[1626925713157,["lixia@LAPTOP-FEL3RH8E",[[-1,73,"其。"]],[75,75],[73,73]]],[1626925714244,["lixia@LAPTOP-FEL3RH8E",[[1,73,"器，"]],[73,73],[75,75]]],[1626925714820,["lixia@LAPTOP-FEL3RH8E",[[-1,74,"，"]],[75,75],[74,74]]],[1626925717750,["lixia@LAPTOP-FEL3RH8E",[[1,74,"。目前，系统"]],[74,74],[80,80]]],[1626925720833,["lixia@LAPTOP-FEL3RH8E",[[-1,78,"系统"]],[80,80],[78,78]]],[1626925753294,["lixia@LAPTOP-FEL3RH8E",[[1,78,"Cloud Native系统支持Linux系统、"]],[78,78],[102,102]]],[1626925758419,["lixia@LAPTOP-FEL3RH8E",[[1,102,"C语言的WE"]],[102,102],[108,108]]],[1626925759153,["lixia@LAPTOP-FEL3RH8E",[[-1,107,"E"]],[108,108],[107,107]]],[1626925760088,["lixia@LAPTOP-FEL3RH8E",[[1,107,"eb、"]],[107,107],[110,110]]],[1626925760798,["lixia@LAPTOP-FEL3RH8E",[[-1,109,"、"]],[110,110],[109,109]]],[1626925774109,["lixia@LAPTOP-FEL3RH8E",[[1,109,"类应用的Conan构建。"]],[109,109],[121,121]]],[1626925774454,["lixia@LAPTOP-FEL3RH8E",[[1,121,"\n\n"]],[121,121],[122,122]]],[1626925774832,["lixia@LAPTOP-FEL3RH8E",[[1,123,"\n"]],[122,122],[123,123]]],[1626925857182,["lixia@LAPTOP-FEL3RH8E",[[1,123,"### 操作步骤\n1. 配置Npm步骤。\n  \n  在流水线任务中，添加“构建 > NPM构建”步骤，设置步骤名称，选择Node版本，在命令框中输入要执行的Npm命令，然后，单击“保存”。\n  \n  其中，如果构建Cloud Native的项目（即代码源选择“代码库”），“node版本”需选择“node:12”。          \n   <img src=\"fig/流水线-Npm-配置.png\" style=\"zoom:50%\">\n   \n2. 配置Npm命令。\n    \n    Npm常用构建命令如下所示。Npm其它命令请参见[Npm官方文档](https://docs.npmjs.com/cli/v7)。\n```\n    # 命令——指定下载依赖包的镜像服务器\n    npm config set registry <镜像服务器地址>\n    npm config set sass-binary-site <镜像服务器地址>\n    # 举例——指定下载依赖包的镜像服务器为taobao镜像服务器\n    npm config set registry http://registry.npm.taobao.org\n    npm config set sass-binary-site http://npm.taobao.org/mirrors/node-sass\n    # 下载并安装所有的依赖包\n    npm install\n    # 命令——打包构建并部署到环境\n    npm run build:<环境名称>\n    # 举例——打包构建并部署到“dev”环境\n    npm run build:dev\n```"]],[123,123],[847,847]]],[1626925861769,["lixia@LAPTOP-FEL3RH8E",[[-1,137,"Npm"],[1,140,"C"]],[137,140],[138,138]]],[1626925865091,["lixia@LAPTOP-FEL3RH8E",[[1,138,"onan构建"]],[138,138],[144,144]]],[1626925906936,["lixia@LAPTOP-FEL3RH8E",[[1,147,"     "]],[147,147],[152,152]]],[1626925907604,["lixia@LAPTOP-FEL3RH8E",[[-1,152,"\n"]],[152,152],[152,152]]],[1626925911019,["lixia@LAPTOP-FEL3RH8E",[[-1,173,"NPM"]],[176,176],[173,173]]],[1626925912934,["lixia@LAPTOP-FEL3RH8E",[[1,173,"Conan"]],[173,173],[178,178]]],[1626934796770,["lixia@LAPTOP-FEL3RH8E",[[-1,193,"Node版本"],[1,199,"“"]],[193,193],[194,194]]],[1626934799878,["lixia@LAPTOP-FEL3RH8E",[[1,194,"平台"]],[194,194],[196,196]]],[1626934812535,["lixia@LAPTOP-FEL3RH8E",[[1,196,"选择”（操作系统）、“扁你"]],[196,196],[209,209]]],[1626934813081,["lixia@LAPTOP-FEL3RH8E",[[-1,207,"扁你"]],[209,209],[207,207]]],[1626934829192,["lixia@LAPTOP-FEL3RH8E",[[1,207,"编译工具”和“架构”"]],[207,207],[217,217]]],[1626934845738,["lixia@LAPTOP-FEL3RH8E",[[-1,229,"Npm"],[1,232,"conan"]],[229,229],[234,234]]],[1626934892947,["lixia@LAPTOP-FEL3RH8E",[[-1,247,"\n"]],[247,247],[247,247]]],[1626934893153,["lixia@LAPTOP-FEL3RH8E",[[-1,248," "]],[247,247],[247,247]]],[1626934893314,["lixia@LAPTOP-FEL3RH8E",[[-1,247," "]],[247,247],[247,247]]],[1626934896256,["lixia@LAPTOP-FEL3RH8E",[[1,247,"           "]],[247,247],[258,258]]],[1626934899332,["lixia@LAPTOP-FEL3RH8E",[[-1,269,"  其中，如果构建Cloud Native的项目（即代码源选择“代码库”），“node版本”需选择“node:12”。"]],[261,318],[259,259]]],[1626934899658,["lixia@LAPTOP-FEL3RH8E",[[-1,258,"\n"]],[259,259],[258,258]]],[1626935042032,[null,[[-1,260,"其中，如果构建C"],[1,268,"        "]],[260,260],[276,276]]],[1626935042032,[null,[[1,260,"其中，如果构建C"],[-1,260,"        "]],[276,276],[260,260]]],[1626934997761,["lixia@LAPTOP-FEL3RH8E",[[-1,290,"Npm"]],[293,293],[290,290]]],[1626934999089,["lixia@LAPTOP-FEL3RH8E",[[1,290,"conan、"]],[290,290],[296,296]]],[1626935000085,["lixia@LAPTOP-FEL3RH8E",[[-1,295,"、"]],[296,296],[295,295]]],[1626935078208,[null,[[-1,260,"其中，如果构建C"],[1,268,"        "]],[260,260],[276,276]]],[1626935078208,[null,[[1,260,"其中，如果构建C"],[-1,260,"        "]],[276,276],[260,260]]],[1626935042791,["lixia@LAPTOP-FEL3RH8E",[[1,132,"\n"]],[131,131],[132,132]]],[1626935043867,["lixia@LAPTOP-FEL3RH8E",[[1,132,"在流水线的任务编辑界面中，添加“测试 > Jmeter任务”步骤。"]],[132,132],[165,165]]],[1626935045842,["lixia@LAPTOP-FEL3RH8E",[[1,132,"1. "]],[132,132],[135,135]]],[1626935049573,["lixia@LAPTOP-FEL3RH8E",[[-1,151,"测试"]],[153,153],[151,151]]],[1626935053056,["lixia@LAPTOP-FEL3RH8E",[[1,151,"构建"]],[151,151],[153,153]]],[1626935060678,["lixia@LAPTOP-FEL3RH8E",[[-1,156,"Jmeter任务"],[1,164,"Conan构建"]],[156,164],[163,163]]],[1626935073107,["lixia@LAPTOP-FEL3RH8E",[[1,168,"2. \n"]],[167,167],[171,171]]],[1626935076636,["lixia@LAPTOP-FEL3RH8E",[[-1,171,"\n1. "]],[171,175],[171,171]]],[1626935473254,[null,[[-1,296,"其中，如果构建C"],[1,304,"        "]],[296,296],[312,312]]],[1626935473254,[null,[[1,296,"其中，如果构建C"],[-1,296,"        "]],[312,312],[296,296]]],[1626935456607,["lixia@LAPTOP-FEL3RH8E",[[-1,362,"2. 配置Npm命令。\n    \n    Npm常用构建命令如下所示。Npm其它命令请参见[Npm官方文档](https://docs.npmjs.com/cli/v7)。\n```\n    # 命令——指定下载依赖包的镜像服务器\n    npm config set registry <镜像服务器地址>\n    npm config set sass-binary-site <镜像服务器地址>\n    # 举例——指定下载依赖包的镜像服务器为taobao镜像服务器\n    npm config set registry http://registry.npm.taobao.org\n    npm config set sass-binary-site http://npm.taobao.org/mirrors/node-sass\n    # 下载并安装所有的依赖包\n    npm install\n    # 命令——打包构建并部署到环境\n    npm run build:<环境名称>\n    # 举例——打包构建并部署到“dev”环境\n    npm run build:dev\n```"]],[362,863],[362,362]]],[1626935457255,["lixia@LAPTOP-FEL3RH8E",[[-1,362,"\n"]],[362,362],[361,361]]],[1626935459433,["lixia@LAPTOP-FEL3RH8E",[[1,362,"\n"]],[361,361],[362,362]]],[1626935461353,["lixia@LAPTOP-FEL3RH8E",[[-1,362,"\n"],[1,363,"关于"]],[362,362],[364,364]]],[1626935462871,["lixia@LAPTOP-FEL3RH8E",[[1,364,"C"]],[364,364],[365,365]]],[1626935465546,["lixia@LAPTOP-FEL3RH8E",[[-1,364,"C"]],[365,365],[364,364]]],[1626935471199,["lixia@LAPTOP-FEL3RH8E",[[1,364,"conan的命令请参见"]],[364,364],[375,375]]],[1626935486512,[null,[[-1,296,"其中，如果构建C"],[1,304,"        "]],[296,296],[312,312]]],[1626935486512,[null,[[1,296,"其中，如果构建C"],[-1,296,"        "]],[312,312],[296,296]]],[1626935485306,["lixia@LAPTOP-FEL3RH8E",[[1,375,"[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。"]],[375,375],[444,444]]],[1626935582838,[null,[[-1,296,"其中，如果构建C"],[1,304,"        "]],[296,296],[312,312]]],[1626935582838,[null,[[1,296,"其中，如果构建C"],[-1,296,"        "]],[312,312],[296,296]]],[1626935573137,["lixia@LAPTOP-FEL3RH8E",[[1,123,"\n"]],[121,121],[122,122]]],[1626935573284,["lixia@LAPTOP-FEL3RH8E",[[1,124,"\n"]],[122,122],[123,123]]],[1626935578530,["lixia@LAPTOP-FEL3RH8E",[[1,123,"构建完成的包放在那里"]],[123,123],[133,133]]],[1626935579113,["lixia@LAPTOP-FEL3RH8E",[[-1,131,"那里"]],[133,133],[131,131]]],[1626935582326,["lixia@LAPTOP-FEL3RH8E",[[1,131,"哪里？XXXXX"]],[131,131],[139,139]]]],null,"lixia@LAPTOP-FEL3RH8E"],["5fb73c15-840e-466f-aeb0-fcf9547869b3",1627264732409,"---\nenable html: true\n---\n# Conan构建\n\nConan是一个支持多操作系统、多编译器、多构建工具、多构建方式的包管理器。目前，Cloud Native系统支持Linux系统、C语言的Web类应用的Conan构建。\n\n构建完成的包放在哪里？XXXXX\n\n### 操作步骤\n1. 在流水线的任务编辑界面中，添加“构建 > Conan构建”步骤。\n2. 配置Conan构建步骤。       \n  在流水线任务中，添加“构建 > Conan构建”步骤，设置步骤名称，选择“平台选择”（操作系统）、“编译工具”和“架构”，在命令框中输入要执行的conan命令，然后，单击“保存”。                     \n   <img src=\"fig/流水线-conan-配置.png\" style=\"zoom:50%\">\n   \n关于conan的命令请参见[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。",[[1627264730430,["lixia@LAPTOP-FEL3RH8E",[[-1,123,"构建完成的包放在哪里？XXXXX"]],[123,139],[123,123]]],[1627264730805,["lixia@LAPTOP-FEL3RH8E",[[-1,124,"\n"]],[123,123],[122,122]]],[1627264737316,["lixia@LAPTOP-FEL3RH8E",[[-1,365,"c"],[1,366,"C"]],[365,366],[366,366]]],[1627264809657,["lixia@LAPTOP-FEL3RH8E",[[1,58,"、"]],[57,58],[58,58]]],[1627264811015,["lixia@LAPTOP-FEL3RH8E",[[-1,58,"、"]],[58,58],[57,58]]]],null,"lixia@LAPTOP-FEL3RH8E"],["dac493d7-c8bb-47a0-aa2e-811834e3ca78",1627293344016,"---\nenable html: true\n---\n# Conan构建\n\nConan是一个支持多操作系统、多编译器、多构建工具、多构建方式的包管理器。目前，Cloud Native系统支持Linux系统、C语言的Web类应用的Conan构建。\n\n\n### 操作步骤\n1. 在流水线的任务编辑界面中，添加“构建 > Conan构建”步骤。\n2. 配置Conan构建步骤。       \n  在流水线任务中，添加“构建 > Conan构建”步骤，设置步骤名称，选择“平台选择”（操作系统）、“编译工具”和“架构”，在命令框中输入要执行的conan命令，然后，单击“保存”。                     \n   <img src=\"fig/流水线-conan-配置.png\" style=\"zoom:50%\">\n   \n关于Conan的命令请参见[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。",[[1627293341200,["lixia@LAPTOP-FEL3RH8E",[[-1,123,"\n"]],[122,122],[122,122]]]],null,"lixia@LAPTOP-FEL3RH8E"],["f34a5a1e-3e6c-4983-b2ea-c98ffd6e40db",1628751625962,"---\nenable html: true\n---\n# Conan构建\n\nConan是一个支持多操作系统、多编译器、多构建工具、多构建方式的包管理器。目前，Cloud Native系统支持Linux系统、C语言的Web类应用的Conan构建。\n\n### 操作步骤\n1. 在流水线的任务编辑界面中，添加“构建 > Conan构建”步骤。\n2. 配置Conan构建步骤。       \n  在流水线任务中，添加“构建 > Conan构建”步骤，设置步骤名称，选择“平台选择”（操作系统）、“编译工具”和“架构”，在命令框中输入要执行的conan命令，然后，单击“保存”。                     \n   <img src=\"fig/流水线-conan-配置.png\" style=\"zoom:50%\">\n   \n关于Conan的命令请参见[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。",[[1628751611365,["lixia@LAPTOP-FEL3RH8E",[[1,121,"  "]],[121,121],[123,123]]],[1628751612446,["lixia@LAPTOP-FEL3RH8E",[[-1,121,"  "]],[123,123],[121,121]]],[1628751616362,["lixia@LAPTOP-FEL3RH8E",[[1,121,"构建完成后，课可以"]],[121,121],[130,130]]],[1628751617442,["lixia@LAPTOP-FEL3RH8E",[[-1,127,"课可以"]],[130,130],[127,127]]],[1628751624004,["lixia@LAPTOP-FEL3RH8E",[[1,127,"剋"]],[127,127],[128,128]]],[1628751624397,["lixia@LAPTOP-FEL3RH8E",[[-1,127,"剋"]],[128,128],[127,127]]],[1628751625175,["lixia@LAPTOP-FEL3RH8E",[[1,127,"可以"]],[127,127],[129,129]]],[1628751640050,["lixia@LAPTOP-FEL3RH8E",[[1,129,"再将构建包打成Docker镜像用于"]],[129,129],[146,146]]],[1628751641672,["lixia@LAPTOP-FEL3RH8E",[[-1,144,"用于"]],[146,146],[144,144]]],[1628751656620,["lixia@LAPTOP-FEL3RH8E",[[1,144,"，用于K"]],[144,144],[148,148]]],[1628751658038,["lixia@LAPTOP-FEL3RH8E",[[-1,144,"，用于K"]],[148,148],[144,144]]],[1628751663527,["lixia@LAPTOP-FEL3RH8E",[[1,144,"，"]],[144,144],[145,145]]],[1628751668198,["lixia@LAPTOP-FEL3RH8E",[[-1,119,"建。构建完成后，可以再将构建包打成Docker镜像，"]],[145,145],[119,119]]],[1628751669759,["lixia@LAPTOP-FEL3RH8E",[[1,119,"建。构建完成后，可以再将构建包打成Docker镜像，"]],[119,119],[145,145]]],[1628751673386,["lixia@LAPTOP-FEL3RH8E",[[-1,121,"构建完成后，可以再将构建包打成Docker镜像，"]],[145,145],[121,121]]]],null,"lixia@LAPTOP-FEL3RH8E"],["51c03b4b-9b8e-40c8-9497-544b20ed574a",1629099398108,"---\nenable html: true\n---\n# Conan构建\n\nConan是一个支持多操作系统、多编译器、多构建工具、多构建方式的包管理器。目前，Cloud Native系统支持Linux系统、C语言的Web类应用的Conan构建。\n\n### 操作步骤\n1. 在流水线的任务编辑界面中，添加“构建 > Conan构建”步骤。\n2. 配置Conan构建步骤。       \n  在流水线任务中，添加“构建 > Conan构建”步骤，设置步骤名称，选择“平台选择”（操作系统）、“编译工具”和“架构”，在命令框中输入要执行的conan命令，然后，单击“保存”。                     \n   <img src=\"fig/流水线-conan-配置.png\" style=\"zoom:50%\">\n   \n关于Conan的命令请参见[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。",[[1629099343850,["lixia@LAPTOP-FEL3RH8E",[[1,101,"\\"]],[101,101],[102,102]]],[1629099343924,["lixia@LAPTOP-FEL3RH8E",[[-1,101,"\\"],[1,102,"、"]],[102,102],[102,102]]],[1629099349450,["lixia@LAPTOP-FEL3RH8E",[[1,102,"Windows系统"]],[102,102],[111,111]]],[1629099354789,["lixia@LAPTOP-FEL3RH8E",[[1,113,"/C__"]],[113,113],[117,117]]],[1629099356501,["lixia@LAPTOP-FEL3RH8E",[[-1,115,"__"]],[117,117],[115,115]]],[1629099357478,["lixia@LAPTOP-FEL3RH8E",[[1,115,"++++"]],[115,115],[117,117]]],[1629099359458,["lixia@LAPTOP-FEL3RH8E",[[-1,118,"+"]],[117,117],[117,117]]],[1629099359657,["lixia@LAPTOP-FEL3RH8E",[[-1,117,"+"]],[117,117],[117,117]]],[1629100780756,["lixia@LAPTOP-FEL3RH8E",[[-1,279,"c"],[1,280,"C"]],[279,280],[280,280]]],[1629100785167,["lixia@LAPTOP-FEL3RH8E",[[1,321,"\n  "]],[318,318],[321,321]]],[1629100794877,["lixia@LAPTOP-FEL3RH8E",[[-1,319,"  "]],[321,321],[319,319]]],[1629100795070,["lixia@LAPTOP-FEL3RH8E",[[-1,319,"\n"]],[319,319],[318,318]]],[1629100796124,["lixia@LAPTOP-FEL3RH8E",[[1,321,"\n  "]],[318,318],[321,321]]],[1629100796636,["lixia@LAPTOP-FEL3RH8E",[[-1,319,"  "]],[321,321],[319,319]]],[1629100803248,["lixia@LAPTOP-FEL3RH8E",[[1,319,"> [!NOTE]"]],[319,319],[328,328]]],[1629100806230,["lixia@LAPTOP-FEL3RH8E",[[1,329,">"]],[329,329],[330,330]]],[1629100808109,["lixia@LAPTOP-FEL3RH8E",[[1,330,"\n"]],[330,330],[331,331]]],[1629100810786,["lixia@LAPTOP-FEL3RH8E",[[1,330," "]],[330,330],[331,331]]],[1629100839250,["lixia@LAPTOP-FEL3RH8E",[[1,331,"Windows平台暂不支持ARM架构。     "]],[331,331],[355,355]]],[1629101046331,["lixia@LAPTOP-FEL3RH8E",[[1,268,"然后单击“生产名"]],[268,268],[276,276]]],[1629101046759,["lixia@LAPTOP-FEL3RH8E",[[-1,273,"生产名"]],[276,276],[273,273]]],[1629101051875,["lixia@LAPTOP-FEL3RH8E",[[1,273,"生成命令”，"]],[273,273],[279,279]]],[1629101056788,["lixia@LAPTOP-FEL3RH8E",[[-1,267,"，"],[1,268,"。"]],[267,267],[268,268]]],[1629101062315,["lixia@LAPTOP-FEL3RH8E",[[1,279,"系统会"]],[279,279],[282,282]]],[1629101073795,["lixia@LAPTOP-FEL3RH8E",[[1,287,"生成对应的构建命令。"]],[287,287],[297,297]]],[1629101076671,["lixia@LAPTOP-FEL3RH8E",[[-1,296,"。"]],[297,297],[296,296]]],[1629101080176,["lixia@LAPTOP-FEL3RH8E",[[1,296,"。您也可以"]],[296,296],[301,301]]],[1629101108864,["lixia@LAPTOP-FEL3RH8E",[[-1,317,"，"]],[318,318],[317,317]]],[1629101116504,["lixia@LAPTOP-FEL3RH8E",[[-1,214,"，"],[1,215,"："]],[214,214],[215,215]]],[1629101119646,["lixia@LAPTOP-FEL3RH8E",[[1,215,"\n  1. "]],[215,215],[221,221]]],[1629101122801,["lixia@LAPTOP-FEL3RH8E",[[-1,274,"然后"]],[274,274],[274,274]]],[1629101124758,["lixia@LAPTOP-FEL3RH8E",[[1,274,"\n  2. "]],[274,274],[280,280]]],[1629101130398,["lixia@LAPTOP-FEL3RH8E",[[-1,324,"，然后"],[1,327,"。"]],[324,324],[325,325]]],[1629101132251,["lixia@LAPTOP-FEL3RH8E",[[1,325,"\n  3. "]],[325,325],[331,331]]],[1629101167736,["lixia@LAPTOP-FEL3RH8E",[[-1,119,"的Web类应用的"]],[120,127],[119,119]]],[1629101174163,["lixia@LAPTOP-FEL3RH8E",[[-1,111,"、"],[1,112,"，"]],[111,111],[112,112]]],[1629101183794,["lixia@LAPTOP-FEL3RH8E",[[1,112,"X86\\"]],[112,112],[116,116]]],[1629101186902,["lixia@LAPTOP-FEL3RH8E",[[-1,115,"\\"],[1,116,"、C"]],[116,116],[117,117]]],[1629101187719,["lixia@LAPTOP-FEL3RH8E",[[-1,117,"C"]],[117,117],[116,116]]],[1629101189913,["lixia@LAPTOP-FEL3RH8E",[[1,116,"X86-"]],[116,116],[120,120]]],[1629101190771,["lixia@LAPTOP-FEL3RH8E",[[-1,119,"-"]],[120,120],[119,119]]],[1629101194729,["lixia@LAPTOP-FEL3RH8E",[[1,119,"_64，"]],[119,119],[123,123]]],[1629101196028,["lixia@LAPTOP-FEL3RH8E",[[-1,122,"，"]],[123,123],[122,122]]],[1629101201590,["lixia@LAPTOP-FEL3RH8E",[[1,122,"、ARM架构，"]],[122,122],[129,129]]],[1629101209972,["lixia@LAPTOP-FEL3RH8E",[[1,136,"的"]],[136,136],[137,137]]],[1629101225376,["lixia@LAPTOP-FEL3RH8E",[[1,126,"（Windwos系统暂不支持）"]],[126,126],[141,141]]]],null,"lixia@LAPTOP-FEL3RH8E"],["c415bb97-12a5-4ccd-9593-0497202d4b8a",1629104042089,"---\nenable html: true\n---\n# Conan构建\n\nConan是一个支持多操作系统、多编译器、多构建工具、多构建方式的包管理器。目前，Cloud Native系统支持Linux系统、Windows系统，X86、X86_64、ARM（Windwos系统暂不支持）架构，C/C++语言的Conan构建。\n\n### 操作步骤\n1. 在流水线的任务编辑界面中，添加“构建 > Conan构建”步骤。\n2. 配置Conan构建步骤。       \n  在流水线任务中：\n  1. 添加“构建 > Conan构建”步骤，设置步骤名称，选择“平台选择”（操作系统）、“编译工具”和“架构”。\n  2. 单击“生成命令”，系统会在命令框中生成对应的构建命令。您也可以输入要执行的Conan命令。\n  3. 单击“保存”。                     \n> [!NOTE]\n> Windows平台暂不支持ARM架构。     \n   <img src=\"fig/流水线-conan-配置.png\" style=\"zoom:50%\">\n   \n关于Conan的命令请参见[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。",[[1629104040898,["lixia@LAPTOP-FEL3RH8E",[[1,422,"\n"]],[421,421],[422,422]]]],null,"lixia@LAPTOP-FEL3RH8E"],["2973fe94-ea37-434f-93d7-6381599ebc96",1629167192375,"---\nenable html: true\n---\n# Conan构建\n\nConan是一个支持多操作系统、多编译器、多构建工具、多构建方式的包管理器。目前，Cloud Native系统支持Linux系统、Windows系统，X86、X86_64、ARM（Windwos系统暂不支持）架构，C/C++语言的Conan构建。\n\n### 操作步骤\n1. 在流水线的任务编辑界面中，添加“构建 > Conan构建”步骤。\n2. 配置Conan构建步骤。       \n  在流水线任务中：\n  1. 添加“构建 > Conan构建”步骤，设置步骤名称，选择“平台选择”（操作系统）、“编译工具”和“架构”。\n  2. 单击“生成命令”，系统会在命令框中生成对应的构建命令。您也可以输入要执行的Conan命令。\n  3. 单击“保存”。                     \n> [!NOTE]\n> Windows平台暂不支持ARM架构。     \n\n   <img src=\"fig/流水线-conan-配置.png\" style=\"zoom:50%\">\n   \n关于Conan的命令请参见[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。",[[1629167135938,["lixia@LAPTOP-FEL3RH8E",[[-1,122,"、ARM（Windwos系统暂不支持）"]],[122,141],[122,122]]]],null,"lixia@LAPTOP-FEL3RH8E"],["4e6b3a32-aff4-455d-856b-a29847429250",1639102916057,"---\nenable html: true\n---\n# Conan构建\n\nConan是一个支持多操作系统、多编译器、多构建工具、多构建方式的包管理器。目前，Cloud Native系统支持Linux系统、Windows系统，X86、X86_64架构，C/C++语言的Conan构建。\n\n### 操作步骤\n1. 在流水线的任务编辑界面中，添加“构建 > Conan构建”步骤。\n2. 配置Conan构建步骤。       \n  在流水线任务中：\n  1. 添加“构建 > Conan构建”步骤，设置步骤名称，选择“平台选择”（操作系统）、“编译工具”和“架构”。\n  2. 单击“生成命令”，系统会在命令框中生成对应的构建命令。您也可以输入要执行的Conan命令。\n  3. 单击“保存”。                     \n> [!NOTE]\n> Windows平台暂不支持ARM架构。     \n\n   <img src=\"fig/流水线-conan-配置.png\" style=\"zoom:50%\">\n   \n关于Conan的命令请参见[Conan官方文档](https://docs.conan.io/en/latest/reference/commands.html)。",[[1639102913415,["lixia@LAPTOP-FEL3RH8E",[[-1,78,"Cloud Native"]],[78,90],[78,78]]],[1639102915390,["lixia@LAPTOP-FEL3RH8E",[[1,78,"本"]],[78,78],[79,79]]]],null,"lixia@LAPTOP-FEL3RH8E"]]}